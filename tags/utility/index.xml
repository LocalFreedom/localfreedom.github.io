<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Utility on 局域自由博客</title>
        <link>https://localfreedom.github.io/tags/utility/</link>
        <description>Recent content in Utility on 局域自由博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 13 Jun 2025 13:04:09 +0000</lastBuildDate><atom:link href="https://localfreedom.github.io/tags/utility/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>SSH远程登入神器的初步使用</title>
        <link>https://localfreedom.github.io/p/ssh%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%85%A5%E7%A5%9E%E5%99%A8%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Fri, 13 Jun 2025 13:04:09 +0000</pubDate>
        
        <guid>https://localfreedom.github.io/p/ssh%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%85%A5%E7%A5%9E%E5%99%A8%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/</guid>
        <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;SSH是安全shell的缩写，提供加密传输访问远程服务器的功能。
SSH几乎是所有类似UNIX系统远程登入的方式，当前的Windows 10/11 已经集成了SSH客户端可选组件。
SSH同时支持者scp、git、https、vpn等很多应用。&lt;/p&gt;
&lt;h2 id=&#34;用法&#34;&gt;用法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;直接使用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ssh 用户名@目标主机:端口&lt;/li&gt;
&lt;li&gt;用户名和当前用户名相同可省略&lt;/li&gt;
&lt;li&gt;目标主机可以是ip或域名&lt;/li&gt;
&lt;li&gt;端口默认22可不写&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;配置密钥访问&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成密钥对 ssh-keygen&lt;/li&gt;
&lt;li&gt;拷贝公钥到目标主机 ssh-copy-id&lt;/li&gt;
&lt;li&gt;配置使用的密钥对&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;端口转发&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本地转发 LocalForward
&lt;ul&gt;
&lt;li&gt;-L [本地主机:]本地主机端口:远程网络主机:远程网络主机端口&lt;/li&gt;
&lt;li&gt;例如 &lt;code&gt;ssh -L 0.0.0.0:30000:host2:8000 user@host1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;这条命令将host2的8000端口映射到本地的30000端口前提是待登录主机host1上可以正常连接到host2的80端口&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;远程转发 RemoteForward
&lt;ul&gt;
&lt;li&gt;-R [登录主机:]登录主机端口:本地网络主机:本地网络主机端口&lt;/li&gt;
&lt;li&gt;例如 &lt;code&gt;ssh -R 0.0.0.0:8080:host2:80 user@host1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;这条命令将host2的80端口映射到待登录主机host1的8080端口前提是本地主机可以正常连接host2的80端口&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;动态转发 DynamicForward
&lt;ul&gt;
&lt;li&gt;-D [本地主机:]本地主机端口&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh -D 0.0.0.0:50000 user@host1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;这条命令创建了一个SOCKS代理(默认127.0.0.1)通过该SOCKS代理发出的数据包将经过host1转发出去&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;专门复制文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scp [-4/-6] [-r] [-P 端口号] 源地址 目的地&lt;/li&gt;
&lt;li&gt;范例
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;scp -r 文件夹 user@1.2.3.4:~&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;scp -6 -P 22 文件 user@[I:P::v:6]:~&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;配置文件&#34;&gt;配置文件&lt;/h2&gt;
&lt;h3 id=&#34;客户端&#34;&gt;客户端&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;文件位置
&lt;ul&gt;
&lt;li&gt;默认在 &lt;code&gt;~/.ssh/config&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Windows/Linux/MacOS同样&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;有一些公共配置
&lt;ul&gt;
&lt;li&gt;HashKnownHosts 散列记住的主机信息，默认&lt;code&gt;yes&lt;/code&gt;,建议&lt;code&gt;no&lt;/code&gt;以便于手工维护&lt;code&gt;known_hosts&lt;/code&gt;文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;每个服务器各是一段配置,常用配置项目如下
&lt;ul&gt;
&lt;li&gt;Host 服务器简称&lt;/li&gt;
&lt;li&gt;User 登陆用户名，默认当前用户名&lt;/li&gt;
&lt;li&gt;Hostname 服务器地址&lt;/li&gt;
&lt;li&gt;Port 服务器端口，默认22&lt;/li&gt;
&lt;li&gt;IdentityFile 需要使用的密钥，相对路径从执行命令的位置为基准&lt;/li&gt;
&lt;li&gt;LocalForward 端口转发本地&lt;/li&gt;
&lt;li&gt;RemoteForward 端口转发远端&lt;/li&gt;
&lt;li&gt;ProxyCommand 应用代理额外命令&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;范例&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Host my_server
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	User root
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	Hostname 10.11.12.13
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	Port 22
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	IdentityFile ~/.ssh/id_rsa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	LocalForward 30000 localhost:30000
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	RemoteForward 8000 localhost:8000
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;服务端&#34;&gt;服务端&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;文件位置
&lt;ul&gt;
&lt;li&gt;类Unix系统通常在&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Windows系统一般不使用SSH，而是RDP远程桌面。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;配置项
&lt;ul&gt;
&lt;li&gt;文件中有详细的注释和范例&lt;/li&gt;
&lt;li&gt;不建议修改服务端的配置&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;技巧&#34;&gt;技巧&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;查看服务器公钥指纹 &lt;code&gt;ssh-keygen -l -f /etc/ssh/ssh_host_ecdsa_key.pub&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;首次连接一台服务器的时候会询问是否接受公钥，显示的指纹可以通过这条命令查看。&lt;/li&gt;
&lt;li&gt;核对指纹可以避免中间人攻击。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;通过socks5代理 &lt;code&gt;ssh -o ProxyCommand=&#39;nc -x 127.0.0.1:1080 %h %p&#39; my_server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;开启socks5代理并显示连接信息 &lt;code&gt;ssh -v -D 1080 my_server&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>kiwix</title>
        <link>https://localfreedom.github.io/p/kiwix/</link>
        <pubDate>Sun, 03 Dec 2023 03:58:12 +0000</pubDate>
        
        <guid>https://localfreedom.github.io/p/kiwix/</guid>
        <description>&lt;h2 id=&#34;离线知识库工具&#34;&gt;离线知识库工具&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://kiwix.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;kiwix&lt;/a&gt;是一个离线查看维基百科的自由软件，采用zim格式压缩维基百科数据以供离线使用。
当然，任何网页文档如果压缩成zim格式都可以用kiwix查看，社区也制作了各种软件、服务等的文档。
可以说kiwix是&lt;strong&gt;实现自由的离线生活的重要基础设施&lt;/strong&gt;。
关键kiwix还集成实现了全文检索功能。&lt;/p&gt;
&lt;p&gt;kiwix&lt;a class=&#34;link&#34; href=&#34;https://kiwix.org/en/applications/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;支持Windows、MacOS/iOS、GNU/Linux、Android等&lt;/a&gt;，可以说是完全跨平台软件，也有很好的国际化多语言支持。
软件很小巧值得收藏。
kiwix还有&lt;a class=&#34;link&#34; href=&#34;https://addons.mozilla.org/en-US/firefox/addon/kiwix-offline&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Firefox插件版本&lt;/a&gt;可以体验。
博主测试浏览器插件使用效果目前还不太稳定。&lt;/p&gt;
&lt;h2 id=&#34;离线知识库&#34;&gt;离线知识库&lt;/h2&gt;
&lt;h3 id=&#34;资源网址&#34;&gt;资源网址&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://library.kiwix.org&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://library.kiwix.org&lt;/a&gt; 列出了官方背书的知识库，可以筛选查找。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://download.kiwix.org/zim/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://download.kiwix.org/zim/&lt;/a&gt; 这里可以下载官方的资源。&lt;/p&gt;
&lt;h3 id=&#34;各种版本&#34;&gt;各种版本&lt;/h3&gt;
&lt;p&gt;维基百科是分语言的，可以选择只下载自己常用的语言和英语版本。
每种语言有完全版本(all)和精选版本(top)。
网站还区分了最大版(maxi)、无图片版本(nopic)和精简版(mini)。&lt;/p&gt;
&lt;p&gt;比如 &lt;a class=&#34;link&#34; href=&#34;https://download.kiwix.org/zim/wikipedia/wikipedia_zh_all_nopic_2023-10.zim&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://download.kiwix.org/zim/wikipedia/wikipedia_zh_all_nopic_2023-10.zim&lt;/a&gt; 就是维基百科-中文-完全-无图片版本。&lt;/p&gt;
&lt;p&gt;其他各种资源基本都有语言的区分，但通常没有维基的那么大，也就不分有无图片了。
目前官网已经收录了超过1000种百科文档，比如各种Linux发行版的wiki、mooc、问答社区等。&lt;/p&gt;
&lt;h3 id=&#34;下载方式&#34;&gt;下载方式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;直接下载，从&lt;a class=&#34;link&#34; href=&#34;https://download.kiwix.org/zim/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;网页&lt;/a&gt;直接点击下载。&lt;/li&gt;
&lt;li&gt;BT下载，在zim下载连接后面加上&lt;code&gt;.torrent&lt;/code&gt;即可下载种子文件，然后用喜欢的BT工具下载即可。&lt;/li&gt;
&lt;li&gt;镜像下载，很多镜像站会镜像整个&lt;a class=&#34;link&#34; href=&#34;https://download.kiwix.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;数据网站&lt;/a&gt;也可以去那里下载。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;zim文件不必及时更新，反正就是离线查看。但每次更新一定要检查打开后图片展示、连接跳转等是否正常。如果发现新版本zim体积减小也要留意，毕竟知识库这种东西一般应该是单调递增的，减小了不免怀疑是否有删减。&lt;/p&gt;
&lt;h2 id=&#34;kiwix的意义&#34;&gt;kiwix的意义&lt;/h2&gt;
&lt;p&gt;kiwix可以让我们不依赖网络而高效的查阅知识，实现离线的自由。
既然离线使用，当然避免了各种广告、追踪等，是ungoogle的隐私主义者的利器。
离线资源的传播可以让真理走向世界的每一个角落，启蒙缺乏互联网的难民儿童，当然还有天朝的愚民。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>RAR 妙用</title>
        <link>https://localfreedom.github.io/p/rar-%E5%A6%99%E7%94%A8/</link>
        <pubDate>Wed, 15 Nov 2023 12:13:15 +0000</pubDate>
        
        <guid>https://localfreedom.github.io/p/rar-%E5%A6%99%E7%94%A8/</guid>
        <description>&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;RAR是最知名、使用最为广泛的压缩软件之一。
官网是 &lt;a class=&#34;link&#34; href=&#34;https://www.rarlab.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.rarlab.com&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;获取旧版本&#34;&gt;获取旧版本&lt;/h2&gt;
&lt;p&gt;虽然官网只有最新release和beta版本的下载连接，但官方也提供了FTP可以下载以前的版本。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;ftp://ftp.rarlab.com/rar&#34; &gt;ftp://ftp.rarlab.com/rar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;鉴于当前主流浏览器不再支持ftp可能需要filezilla等软件来获取旧版本安装包。
6.10开始不再支持XP，XPsp3只能使用32位版本。&lt;/p&gt;
&lt;p&gt;比较特殊的是&lt;strong&gt;5.91&lt;/strong&gt;版本，这是5系列最后一版本，同时也是Win7SP1可以直接识别数字签名的版本，非常时候收藏以离线安装使用。
但是当年RAR的数字签名除了问题，ftp上提供的是重新签名后的版本，并不能被Win7SP1识别。
作者在这里放上当年从官网下载的&lt;code&gt;winrar-x64-591.exe&lt;/code&gt;的SHA256值&lt;code&gt;1c30d74f20ea721d63061d2a06ac00a9270fc7823004ff4f572d354990d4c1ae&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;激活&#34;&gt;激活&lt;/h2&gt;
&lt;p&gt;RAR是专有收费软件，尽管很多人都没有意识到。
RAR作者也非常良心，只要忍受每次开起的广告就可以一直试用。
购买正版对于很多国家可能并不简单，不过激活还是很容易做到的。
在RAR安装目录&lt;code&gt;C:\Program Files\WinRAR&lt;/code&gt;下新建&lt;code&gt;rarreg.key&lt;/code&gt;，输入纯文本注册信息即可激活。
注册信息就麻烦读者自行检索吧。&lt;/p&gt;
&lt;h2 id=&#34;防乱码&#34;&gt;防乱码&lt;/h2&gt;
&lt;p&gt;使用最广泛的开源的ZIP格式，没有在压缩包中包含字符编码的说明。
对于中文用户，从WinXP或Win7打包的文件可能在MacOS或Linux上文件名目录乱码。
而RAR格式是包含字符编码信息的，便于在其他语言或默认字符编码的系统中正确识别文件名和目录的字符编码。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>

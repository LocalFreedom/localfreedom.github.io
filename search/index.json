[{"content":"简介 LibreTranslate 是一个轻量、开源的机器翻译服务，可以在本地部署或部署到云服务器，实现低延迟、无外部依赖的翻译系统。 LibreTranslate 自身是 Argos Translate 官方推荐的 WebUI，而 Argos Translate 则基于 OpenNMT 开源架构训练翻译模型。\n相比于如今火爆的大语言模型LLM提供的翻译，LibreTranslate提供的传统的轻巧的翻译服务更加便捷，无需独立显卡，只占用少量内存，尤其便于在个人终端上配合LLM使用，比如生成图片的LLM通常基于英文提示词，且可能直接耗尽显存无力在笔电上再起其他LLM用于翻译，那么使用LibreTranslate即可方便的将中文想法转换为英文提示词。 LibreTranslate 官方提供Container部署方式，可以更加轻易的完成本地部署，本文聚焦使用Docker在个人设备部署可离线使用的轻便翻译服务。\nDocker环境 下载并安装Docker可以参见前一篇博文。\nLibreTranslate镜像 从v1.6.3版本开始LibreTranslate镜像的体积异常变大，不知道是打包过程出了什么bug。 本着轻量级可靠的原则，这里推荐v1.6.2和v1.7.2版本，寻求更新的版本建议先在 DockerHub 上看看镜像尺寸。\n1 2 3 4 # 联网Pull镜像 docker pull docker.io/libretranslate/libretranslate:v1.6.2 # 导出镜像可迁往离线环境 docker save -o LibreTranslate.tar libretranslate:v1.6.2 下载翻译模型 LibreTranslate只是WebUI，Docker镜像中集成了 Argos Translate 翻译引擎，工作所需的翻译模型需要单独下载。 Argos官方列出了所有支持的语言翻译模型。从结构上可以看出此工具是通过英文过渡的方式实现不同语言之间的翻译的，选择自己需要的语言和英语之间的翻译包下载。 下载的 .argosmodel 格式翻译模型包存放到一个资料夹中，如 C:\\Users\\UserName\\Downloads\\MTpackages\n启动服务 在个人设备上装好Docker打开命令行，我们需要将下载的翻译模型包通过卷的方式挂载到容器内，由于默认联网检查并下载所有翻译模型，所以需要通过 \u0026ndash;load-only 限制只加载已下载好的翻译语言模型。\n1 2 3 4 # 导入镜像(假设放在U盘Z:中) docker load -i Z:\\LibreTranslate.tar # 从镜像启动容器 docker run -d -m 2g -p 5000:5000 -v C:\\Users\\UserName\\Downloads\\MTpackages:/home/libretranslate/.local/share/argos-translate/packages -w /app --name=\u0026#34;LibreTranslate\u0026#34; libretranslate/libretranslate:v1.6.2 --load-only en,zh 打开浏览器，在地址栏输入 localhost:5000 即可访问WebUI，体验LibreTranslate的机器翻译服务。如果5000端口被其他程式占用了，修改 -p 参数的第一个5000为其他空闲端口号即可。\n持久运行 首次启动后，LibreTranslate会将翻译包解压到同一个资料夹，之后再 -v 挂载可以加上 :ro 选项限制容器写入存储翻译模型包的资料夹。 从命令行启动服务后，即可在 DockerDesktop 的图形界面中停止/启动这一服务，之前的启动命令当然也可以在图形界面配置，但似乎图形界面的配置还不是很完善。\n效果体验 毕竟轻量级，不是大语言模型，但对于配合其他LLM等重型应用，是非常充足的。 翻译结果可能有些机器味，结合个人理解润色一下即可，毕竟用LLM画图的你英文不会太差的。\n","date":"2025-09-12T06:03:04Z","permalink":"https://localfreedom.github.io/p/libretranslate/","title":"LibreTranslate"},{"content":"为什么在 Windows 上使用 Docker？ 开发环境一致：将应用与依赖打包成容器，无论你在 Windows、Linux 还是 macOS 上都能得到一模一样的运行环境。 资源隔离：每个容器都是独立进程，避免了传统方式中“软件冲突”的麻烦，也限制了恶意软件的活动范围。 快速构建：通过 Dockerfile 只需几行指令即可定义完整的运行时，CI/CD 流水线也能一键部署。 用户友好：Docker Desktop 为 Windows 开发者提供了 GUI、WSL2 集成、图形化的容器管理和镜像管理等一站式体验。 前置条件：系统准备 系统版本 Windows10的1809版本及以上，或Windows11 Windows Server 2019 及以上 虚拟化 BIOS中开启硬件Intel或AMD的CPU虚拟化，新电脑通常默认已开启。 OS模块 Windows需要启用WSL2或Hyper-V，在控制面板-添加和删除应用-开启或关闭Windows功能中勾选。 Linux需要KVM，常见发行版所使用的内核都是带KVM的。 磁盘应有充足的空间，没有几十GiB空间很多有趣的Docker镜像就玩不成了。 下载安装 下载安装包 https://docs.docker.com/desktop/release-notes/ 安装 Windows https://docs.docker.com/desktop/setup/install/windows-install/ 可选WSL2或Hyper-V后端，推荐WSL2。 结束时可让DockerInstaller自动开始WSL2的初始化，可能需要重启系统。 Linux https://docs.docker.com/desktop/setup/install/linux/ 可以按照docker官方建议添加源，使用类似Windows的体验。 建议直接从发行版软件仓库安装使用命令行版本，通常如ubuntu包名是docker.io。 初始化 WSL2首次使用只能联网下载更新。 基本使用 在Windows双击桌面上的图表即可打开DockerDesktop，可以在界面左侧看到一排按钮。 镜像管理页面可以从DockerHub上下载镜像。 容器管理页面可以运行镜像成为容器，运行时可能需要选择映射的端口和档案。\n镜像是一个基础，有了镜像便可以运行它得到，每次运行可以得到一个容器，就像每次运行软件打开一个窗口。 容器会提供一些服务，通常通过浏览器访问本地相应端口来使用。当结束容器，试用期间产生的数据和变化一并消除，就像浏览器的隐私模式，但比浏览器能提供的功能花样多多了。\nDockerDesktop除了图形界面，也继承Docker的命令行程序，并且命令行有更全面的功能。 Windows安装的时候记得勾选添加命令到PATH。 具体命令格式在Windows/Linux/MacOS都是一致的。\n从DockerHub上下载镜像可以用pull命令，如：\n1 docker pull 镜像名:版本号(默认latest) 运行则是run命令，如：\n1 2 3 docker run 镜像名 docker run [选项如-itd] 镜像名[:版本号默认latest] docker run [选项如-itd] [-n 容器名默认随即英文单词] 镜像名[:版本号默认latest] 由于Docker是来自Linux生态的技术，所以镜像通常都是Linux内核，即使在Windows也是通过WSL或Hyper-V使用虚拟的Linux内核。 当然对于运行的容器可以进入其中，使用其Linux命令行界面。\n1 docker exec -it 容器名或ID 离线迁移 导出save/导入load 镜像 1 2 docker save -o 文件名.tar 镜像名1:版本号1 镜像名2:版本号2 ... docker load -i 文件名.tar 导出export/导入import 容器 1 2 docker export -o 文件名.tar 容器名或容器ID docker import 文件名.tar 参考镜像:版本号 导出/导入 卷 -v 参数挂载的卷就是一个本地文件夹，直接复制或打包复制即可。\n1 2 -v 主机路径:容器路径:权限 -v D:\\Data:/data:ro 镜像推荐 官方提供了集中分发镜像的平台 https://hub.docker.com ，其中有趋势排序推荐。\n这里推荐一些博主认为好用有趣的镜像：\ndocker.io/continuumio/anaconda3 ocker.io/library/nextcloud docker.io/ollama/ollama docker.io/jgraph/drawio docker.io/library/alpine 使用pull命令，或者在图形界面检索，即可拉取体验。\nDocker 新世界的大门，快来下载打开它吧！\n","date":"2025-08-30T11:51:29Z","permalink":"https://localfreedom.github.io/p/docker%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/","title":"Docker的安装与日常使用技巧"},{"content":"简介 SSH是安全shell的缩写，提供加密传输访问远程服务器的功能。 SSH几乎是所有类似UNIX系统远程登入的方式，当前的Windows 10/11 已经集成了SSH客户端可选组件。 SSH同时支持者scp、git、https、vpn等很多应用。\n用法 直接使用\nssh 用户名@目标主机:端口 用户名和当前用户名相同可省略 目标主机可以是ip或域名 端口默认22可不写 配置密钥访问\n生成密钥对 ssh-keygen 拷贝公钥到目标主机 ssh-copy-id 配置使用的密钥对 端口转发\n本地转发 LocalForward -L [本地主机:]本地主机端口:远程网络主机:远程网络主机端口 例如 ssh -L 0.0.0.0:30000:host2:8000 user@host1 这条命令将host2的8000端口映射到本地的30000端口前提是待登录主机host1上可以正常连接到host2的80端口 远程转发 RemoteForward -R [登录主机:]登录主机端口:本地网络主机:本地网络主机端口 例如 ssh -R 0.0.0.0:8080:host2:80 user@host1 这条命令将host2的80端口映射到待登录主机host1的8080端口前提是本地主机可以正常连接host2的80端口 动态转发 DynamicForward -D [本地主机:]本地主机端口 ssh -D 0.0.0.0:50000 user@host1 这条命令创建了一个SOCKS代理(默认127.0.0.1)通过该SOCKS代理发出的数据包将经过host1转发出去 专门复制文件\nscp [-4/-6] [-r] [-P 端口号] 源地址 目的地 范例 scp -r 文件夹 user@1.2.3.4:~ scp -6 -P 22 文件 user@[I:P::v:6]:~ 配置文件 客户端 文件位置 默认在 ~/.ssh/config Windows/Linux/MacOS同样 有一些公共配置 HashKnownHosts 散列记住的主机信息，默认yes,建议no以便于手工维护known_hosts文件 每个服务器各是一段配置,常用配置项目如下 Host 服务器简称 User 登陆用户名，默认当前用户名 Hostname 服务器地址 Port 服务器端口，默认22 IdentityFile 需要使用的密钥，相对路径从执行命令的位置为基准 LocalForward 端口转发本地 RemoteForward 端口转发远端 ProxyCommand 应用代理额外命令 范例 1 2 3 4 5 6 7 Host my_server User root Hostname 10.11.12.13 Port 22 IdentityFile ~/.ssh/id_rsa LocalForward 30000 localhost:30000 RemoteForward 8000 localhost:8000 服务端 文件位置 类Unix系统通常在/etc/ssh/sshd_config Windows系统一般不使用SSH，而是RDP远程桌面。 配置项 文件中有详细的注释和范例 不建议修改服务端的配置 技巧 查看服务器公钥指纹 ssh-keygen -l -f /etc/ssh/ssh_host_ecdsa_key.pub 首次连接一台服务器的时候会询问是否接受公钥，显示的指纹可以通过这条命令查看。 核对指纹可以避免中间人攻击。 通过socks5代理 ssh -o ProxyCommand='nc -x 127.0.0.1:1080 %h %p' my_server 开启socks5代理并显示连接信息 ssh -v -D 1080 my_server ","date":"2025-06-13T13:04:09Z","permalink":"https://localfreedom.github.io/p/ssh%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%85%A5%E7%A5%9E%E5%99%A8%E7%9A%84%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/","title":"SSH远程登入神器的初步使用"},{"content":"虽然简化字和正体中文是一一对应的，但是中国大陆与台湾在翻译英语世界科技上形成了不同的习惯。 本文收集IT术语方便的差异，便于写作和阅读时避免歧义。\nEnglish 台湾 中国大陆 Abstract 摘要；抽象的 摘要；抽象的 Abstraction 抽象 抽象 Access 存取 (win)；取用 (mac) 访问 Accessibility 无障碍；协助工具 (win)；辅助功能 (mac) 无障碍；辅助功能 (win/mac) Activate, Activation 启用，启动 激活 Active 使用中的；现行的；有效的；启用的 使用中的；现用的；有效的；激活的 Adapter, Adaptor 界面卡，配接器 (win)；转接器 (mac) 适配卡，适配器 Add 加入 添加 Address 位址，地址 位址，地址 Advanced 进阶的 高级的 Aggregation 聚合 聚合 AI (Artificial intelligence) 人工智能 人工智能 Algorithm 算法 算法 Allocate 配置 分配 Allocator 配置器 分配器 Annotation 注释 (win)；注解 (mac)；诠释 (web) 注释 (win)；注解 (mac) App bundle 应用程序套件组合 (win)；App 套件 (mac) 应用程序包 (win)；App 捆绑包 (mac) Application 应用；应用程序 应用；应用程序 Apply 套用 应用 Architecture 架构；结构 架构；结构 Argument 引数 参数（也称为实际参数，实参） Arity 元数（所需算子的数量） 参数数量 Artifact 成品 (win/mac)；产出物 (web) 项目 (win)；成品 (mac) Array 阵列 数组 Assembly language 组合语言 汇编语言 Assert, Assertion 判断提示(win)；宣告(win/mac)；声明(mac) 断言(win)；声明(win/mac)；论断(mac) Assign, Assignment 指派；（程式设计）赋值 分配；（编程）赋值 Assignment operator 指派运算子 赋值运算符 Asynchronize 异步 异步 Asynchronous 异步的 异步的 Atomic 不可分割的 原子的 Attribute 属性 属性；特性 Audio 音讯；音效 音频 Authenticate, Authentication 验证，认证 验证，认证 Authorize, Authorization 授权 授权 Autoboxing 自动装箱 自动装箱 Background processes 背景程序，背景处理程序 后台进程 Bandwidth 带宽 带宽 Base class 基底类别 基类 Batch 批次（处理） 批（处理） Binary function 二元函式 二元函数 Binary operator 二元运算子 二元运算符 Binary search 二元搜寻法 二分查找 Binary tree 二元树 二叉树 Bind 系结 (win)；绑定 (mac) 绑定 Bit 位元 位 Bitrate 位元率 码率 Block 封锁；阻挡 屏蔽；阻止 Block （程式码）区块 （代码）块 Blocker 封锁程式 (win)；阻挡器 (mac) 阻止程序 (win)；拦截器 (mac) Boolean 布林 布尔 Bounce 退回；弹跳 退回；弹跳 Breakpoint 中断点 断点 Build (verb) 建构 (mac)；建置，组建 (win) 构建 Build (noun) 构件；版本（号） 构件；版本（号） Build-in 内建 内置 (win)；内建 (mac) Bundle (noun) 组合包 (win)；套件 (mac)；套组 捆绑包 Bundle (verb) 整合 整合 Bus 总线 总线 Burn 烧录 刻录 Byte 字节 字节 Cache 快取记忆体，快取 高速缓存，缓存 Call 呼叫 调用 Callback 回呼 回调 Carriage-return 回车字元 回车符 Certificate 凭证 证书 Character 字元 字符 Check 查看 查看 Check box, Checkbox 核取方块 (win)；注记框 (mac) 复选框 Class 类别 类 Point \u0026amp; Click (noun) 点按 点按 Click nan nan (vs. Tap) 点选 (win)；按一下，点/选按 (mac) 点击 (win)；点按 (mac) Tap nan nan (vs. Click) 轻触 (win)；点一下 (mac) 触碰 (win)；轻点 (mac) Client-side 用户端 客户端 Clipboard 剪贴簿 (win)；剪贴板 (mac) 剪贴板 Clone 复制 克隆 Cloud computing 云端运算 云计算 Cohesion 内聚 内聚 Collaborate, Collaboration （协同）合作 协作 Combo box 组合方块；下拉式方块 (win) 组合框 Come with 随附 随附 Command 指令 命令 Command line 命令列 命令行 Comment 留言;注解，注释 评论;注释 (win),注解，批注 (mac) Commit 提交 提交 Communication 通讯 通信 Community 社群 社区 Compatibility 相容性 兼容性 Compatible 相容的 兼容的 Compile, Compilation 编译 编译 Compile time, Compile-time 编译期 编译期，编译时 Compiler 编译器 编译器 Component 组件；元件 组件 Composition 组合 组合 Compress 压缩 压缩 Concurrency 并行性，并行 并发性，并发 Concurrent 并行的；同时的 并发的；同时的 Configuration 配置；设定 (mac)；组态 (win) 配置 Connect, Connection 连接；（网络、数据库）连线 连接 Constant 常数 常量 Constraint 约束；限制 约束；限制 Constructor 建构子，建构式，建构函式 构造函数 Container 容器 容器 Context 背景（关系）；环境；上下文；内容 背景（关系）；环境；上下文；内容 Continuous delivery 持续交付 持续交付 Continuous deployment 持续部署 持续部署 Continuous integration 持续整合 持续集成 Control 控制元件，控件 控件 Copy 复制 (win)；拷贝 (mac) 复制 (win)；拷贝 (mac) Coroutine 协程，协同程式 协程，协同程序 Coupling 耦合 耦合 Crash 当机 (win/mac)；毁损 (win) 崩溃 (win/mac)；故障 (win) Create 建立 创建 Cursor 游标 光标 Custom 自订 自定义 Data 资料 数据 Data link layer 资料连结层 数据链路层 Data structure 资料结构 数据结构 Database 数据库 数据库 Database schema 数据库纲要 (mac)；数据库结构描述 (win) 数据库架构，数据库模式 Deadlock 死结；锁死 死锁 Debug 除错 (win/mac)；侦错 (win) 调试 Debugger 除错器 调试器 Declare, Declaration 宣告，声明 声明 Default 预设 默认 Definition 定义；分辨率 定义；清晰度 Delegate, Delegation 委派 委托 Dependency 相依性；依赖关系 依赖 Derived class 衍生类别 派生类 Design pattern 设计模式 设计模式 Destructor 解构式，解构函式 析构函数 Detect, Detection 侦测 检测 Device 装置 设备 Dialog 对话方块 (win)；对话框 (mac) 对话框 Digital 数位的；数字化 数字的；数字化 Digital signature 数位签章 数字签名 Digital certificate 数位凭证 数字证书 Directory 目录 目录 Disk 碟 盘 Disk image 磁盘映像档 磁盘映像 Dispatch 分派 分派；调度 Distributed 分散式 分布式 Distribute, Distribution 分发；分配；分散 分发；分配；分布 Distribution 发布/发行（版本）；发行套件 发行（版本） Document 文件 文档；文稿 Domain 网域 域 Driver 驱动程式 驱动程序 Drop-down, Dropdown (noun) 下拉式选单 下拉菜单 Drop-down, Dropdown (verb) 下拉 下拉 Drop-down menu 下拉式功能表 (win)；下拉式选单 (mac) 下拉菜单 (win/mac) Drop-down list 下拉式清单 下拉列表 Dynamic binding 动态系结，动态连结，动态绑定 动态绑定 Element 元素；元件 元素；元件 Email, E-mail 电子邮件 电子邮件 Enable 启用 启用 Encapsulation 封装 封装 Enter 确认；进入 回车键 Entity 实体 实体 Enumeration 列举 枚举 Equal 相等的 相等的 Equality 相等性，相等 相等性，相等 Escape code 跳脱码，逸出码，转义码 转义码 Event 事件 事件 Exception 例外 异常 Explicit 明确的 (win)；显式 (mac) 显式 Export 汇出 导出 Expression 运算式 (win)；表示式 (mac)；表达式 表达式 Extension 扩充(程式、功能) 扩展（程序、功能） Extension 副档名 扩展名 Feature 特色，特点，特征 特色，特点 Feature nan nan (vs. Function) （特殊的）功能 （特殊的）功能 Feedback 回馈 反馈 Field 栏位；域 字段，栏位；域 File 档案 文件 File system 档案系统 文件系统 Filter 过滤器 过滤器 Find 寻找 查找 Firmware 固件 固件 Flag 旗标 标记 Flash memory 闪存 闪存 Flush 排清，清除 刷新 对齐，齐平 对齐，齐平 nan Folder 资料夹 (win)；档案夹 (mac) 文件夹 Font 字型 (win)；字体 (mac) 字体 Form 表单 表单 Format (noun) 格式 格式 Format (verb) 格式化 格式化 Forward 转发，转送，转寄 转发，转送，转寄 Fragment 片段 片段 Frame 影格，画面；框架 帧；框架 Frame rate nan nan FPS (frames per second) 影格率，画面更新率 帧率 Framework 框架 框架 Frozen （软件或影片）画面定格；冻结，锁定 冻结，锁定 Full screen, Fullscreen 全萤幕 全屏 Function 函式，函数 函数 Function nan nan (vs. Feature) （一般的）功能 （一般的）功能 Functionality 功能 功能 Game 游戏 游戏 Gateway 闸道器 网关 General 一般的 通用的 Generate 产生，生成 生成 Generic 通用的 通用的 Generics 泛型 泛型 Global 全域的；总体的，整体的，通用的 全局的 Group box 群组方块 分组框，群组框 Graph 图 图 Handle 控制代码 句柄 Handler 处理常式，处理程式，处理器 处理程序，处理器 Hardware 硬件 硬件 Hash 杂凑 哈希 Header file 标头档 头文件 Heap 堆积 堆 Help 使用说明；说明；帮助 帮助 Hierarchy 阶层 层次结构 High Definition 高分辨率，高清 高清晰度，高清 Host file 主机档案，host 档案 主机文件 Home folder 主资料夹 (win)；个人专属档案夹 (mac) 主文件夹 (win)；个人文件夹 (mac) Home page 首页，主页 主页 Icon 图示 (win);图像 (mac) 图标 IDE 整合式开发环境 集成开发环境 Identifier 识别字 标识符 Idle 闲置 闲置 Image 影像；图像，图片；映像档 影像；图像，图片；映像 Immutable 不可变的；无法更改的 不可变的；不可更改的 Implement 实作 实现 Implementation 实作（品） 实现 Implicit 隐含的 (win)；隐式 (mac) 隐式 Import 汇入 导入 Indent 缩排 缩进 Info 资讯 简介 Information 资讯 信息 Inheritance 继承 继承 Initialization 初始化 初始化 Inline 行内；内嵌 内联 Instance 实体；实例 实例 Integrate 整合 集成 Integrated 整合式，整合的 集成的 Integrity 完整性 完整性 Interact, Interaction 互动 交互 Interface 界面 接口 Internal Storage 内部储存 内存 (仅手机等便携装置，民间称谓) Internationalization (I18N) 国际化 国际化 Internet 互联网 互联网 Interpreter 直译器 解释器 Invoke 呼叫(mac);执行，叫用(win) 调用 Iterate 迭代；反复（运算） 迭代；重复、循环（访问） Iteration 迭代 迭代 Iterator 迭代器 迭代器 Kernel 核心 内核 Key 金钥，密钥 密钥 Keybind 快速键 快捷键 Lag 延迟 延迟 Layout 布局，配置 布局，配置 Lazy loading 惰性载入；消极式载入；延迟载入；懒载入 延迟加载；懒加载 Lexer, Lexical analyzer 词法分析器 词法分析器 Lexical analysis 词法分析 词法分析 Library 程式库，函式库 程序库，函数库 Link 连结 链接 Link time 连结期 链接期 Linked list 连结串列 链表 Linker 连结器 链接器 List 清单；列表 列表 Listener 监听器 监听器 Literals 字面值，定数，常值 字面值，字面量 Literal constant 字面常数，字面常值 字面常量 Load 载入 加载 Load time 载入期 加载期 Loader 载入器 加载器 Local 区域的，本地的；本机 局部的，本地的；本地（主机） Localization (L10N) 在地化 本地化 Local variable 区域变数 局部变量 Lock 锁定 锁定 Log 记录 日志 Log in, Login 登入 登录 Log out, Logout 登出 退出；注销 Loop 循环；重复；循环 循环 Map, Mapping 对应；映射 映射 Match 配对；符合；配合；比对；匹配 匹配 Macro 巨集 宏 Memory 记忆体 内存 Menu 选单；功能表 菜单 Message 讯息 消息；信息 Metadata 中继资料(win);后设资料(mac);诠释资料 元数据 Middleware 中介层，中介软件 中间件，中间软件 Mobile 行动 移动 Moderate, Moderation 审核 审核 Modifier 修饰子，修饰词 修饰符 Module 模组 模块 Monomorphism 单型 单态 Motherboard 主板 主板 Mouse 鼠标 鼠标 Mouse pointer 鼠标指标 鼠标指针 Multitasking 多工（处理） 多任务（处理） Mutable 可变的 可变的 Mutex 互斥 互斥 Native 原生 原生 Navigate, Navigation 导览 导航 Navigator 导览器 导航器 Nested 巢状的 嵌套的 Network 网络 网络 New 新增 新建 Notarization 公证 公证 Object 物件 对象 Object code 目的码 目标代码 Object file 目的档，目的码档 目标文件 Object-oriented 物件导向 面向对象 Online 线上 在线 Operand 算子 操作数，运算元 Operating system 操作系统 操作系统 Operator 运算子 操作符，运算符 Optimize, Optimization 最佳化 优化 Option 选项 参数 Overflow 溢位（上限溢位） 溢出（上溢出） Overlay 嵌入界面 叠加面板 Overload 多载，覆载，重载 重载 Override 覆写，重写 覆盖，重写 Pack 封装，压缩 打包，压缩 Package (noun) 套件，软件包 （程序、软件）包 Package (verb) 封装 打包，封装 Pane 窗格(win);面板(mac) 窗格(win);面板(mac) Parallelism 平行性，平行 并行性，并行 Parameter 参数 参数（也称为形式参数，形参） Parse 分析；剖析；解析 解析 Parser 语法剖析器 语法分析器 Partition 分割；（硬盘）分割区 分割；（硬盘）分区 Paste 贴上 粘贴 Patch 更新档(win);修补程式(mac) 补丁(win);修补程序(mac) Pattern 模式；样式 模式；样式 Performance 效能 性能 Persistence 持续性 持久性 Photo 照片 照片 Physical layer 实体层 物理层 Picklist 挑选清单 (win)；选取列表 (mac) 选择列表 Placeholder 占位符号;预留位置(win);暂存区(mac) 占位符 Pluggability 可拔插性 可插入性 Plugin 插件(win);外挂模组(mac) 插件 扩展 Pointer 指标 指针 Polymorphism 多型 多态 Port （连接）埠 端口 Power bank 行动电源 移动电源，充电宝 Presentation layer 表现层 表示层 Preset 预设 预设 Print 打印 打印 Printer 打印机，打印机 打印机 Procedure 程序 过程 Process 行程；程序 进程 Profile 设定档(win);描述档(mac) 配置文件(win);描述文件(mac) Profile 评测 评测 Profile (or Personal profile) 个人档案 个人资料 Profiler （效能）分析工具 （性能）分析器 Program 程式 程序 Project 专案 项目，工程 Protocol 协定 协议 Provision, Provisioning 布建 预配 Proxy (or Proxy server) 代理服务器 代理服务器 Pseudo code 虚拟码 伪代码 Pull-down list 下拉式清单 下拉列表 Quality 品质 质量 Queue 伫列 队列 Quit unexpectedly (App)闪退 意外退出 Radian 径度 弧度 Radio button 选项按钮(win);圆形按钮(mac) 单选按钮 RAM (Random Access Memory) 随机存取记忆体 随机存取存储器 Read 读取 读 Read-only 只读 只读 Recovery 复原，还原 还原 (win)，恢复 (mac) Recursion 递回 递归 Redirect, Redirection 重新导向；转址 重定向 Reference 参照，参考 参考 Register 暂存器；注册 寄存器；注册 Regular expression 正规表示法；正规表达式；规则运算式 正则表达式 Release （发行、发布）版本 （发行、发布）版本 Remote 远端 远程 Render 算绘；渲染 渲染 Resolution 分辨率 分辨率 Response 回应 响应 Response body 回应本文 响应正文 Response header 回应标头 响应头 Restore 还原 (win)，回复 (mac) 还原 (win)，恢复 (mac) Return 回传，传回；恢复 返回；恢复 Revoke, Revocation 撤销 撤销 Rollback 复原 回滚，回退 Routine 常式 程序 Run 执行 运行 Runtime, Run-time 执行期；执行环境 运行期，运行时；运行环境 Runtime environment (RTE), 执行环境 运行环境 Runtime system 执行系统 运行系统 Save 储存 保存 Sampling 取样 取样 Scalar 纯量 标量 Schedule 排程 调度 Scheduler 排程器，排程程式 调度器，调度程序 Scope （作用、有效）范围，域 （作用、有效）范围，域 Scroll bar 卷轴 滚动条 Script 指令码(win);工序指令(mac) 脚本 SDK (Software Development Kit) 软件开发工具包;软件开发套件 软件开发工具包;软件开发套件 Search engine 搜索引擎 搜索引擎 Security 安全性 安全性 Segment 区段 段 Semaphore 号志 信号量 Server 服务器 服务器 Server-side 服务器端 服务器端，服务端 Session 工作阶段，作业阶段 会话 Session （电脑网络）对谈/话，会谈/话；连线阶段 会话 Session layer 会议层 会话层 Set up 设定 设置 Settings 设定 设置 Shortcut 捷径 快捷 Shortcut key 快速键 快捷键 Sign in, sign-in 登入 登录 Sign out, sign-out 登出 退出，注销 Silicon 硅 硅 Simulation 模拟 模拟 Signature 签章；签名 签名 Slider 滑杆 滑块 Smart 智慧 智能 Smartphone 智能手机 智能手机 SMS (Short Message Service) 简讯 短信 Snip 撷图 截图 Source code 源代码 源代码，源码 Stack 堆叠 栈 Star rating 星级评等(win);星号评等(mac) 星级评分 Statement 叙述，陈述（句） 语句 Status bar 状态列 状态栏 Stepper 步进器 步进器 Stream 串流；资料流 （数据）流 String 字串 字符串 String interpolation 字串插值 字符串插值 Stuttering （软件或影片的画面）断断续续 - Subclass 子类别 子类 Subroutine 副程式 子例程 Superclass 父类别 超类 Support 支援 支持 Suspend 暂停（权限） 暂停（权限） Synchronize 同步 同步 Synchronous 同步的 同步的 Syntactic analysis 语法分析；语法剖析 语法分析 Tab 索引标签，分页，标签（页） 标签（页） Tag 标记 标签 Task 工作 任务 Template 范本 模板 Text 文字 文本 Text box 文字框 文本框 Thread 执行绪 线程 Top-up 加值，储值 充值 Token 标记(win);代号(mac) 标记(win);令牌(mac) Traverse 走访 遍历 Tray (or System tray) 系统匣 系统托盘 Tree 树 树 Tuple 元组 元组 Tutorial 教学 教程 Type 型别，型态 类型 Universal 通用的 通用的 Variable 变数 变量 Video 影片；视讯 视频 View 检视；显示；视图 查看；显示；视图 Voice 语音 语音 Volume 磁盘区 (win)；卷宗 (mac) 卷 (win)；宗卷 (mac) Window 视窗 窗口 Widget 视窗元件；小工具 窗口部件；小部件 Wildcard 万用字元 通配符 Workspaces 工作区；工作空间 工作区 Write 写入 写 ","date":"2025-06-11T12:50:31Z","permalink":"https://localfreedom.github.io/p/%E5%8F%B0%E6%B9%BE%E5%92%8C%E5%A4%A7%E9%99%86it%E6%9C%AF%E8%AF%AD%E5%AF%B9%E7%85%A7%E8%A1%A8/","title":"台湾和大陆IT术语对照表"},{"content":"VMware是著名的个人桌面虚拟机软件，有友好的用户界面，强大的虚拟显卡能力。 尤其是用虚拟机运行3D游戏，几乎是便捷可行的唯一选择。\n市面上一直流传着VMware产品的激活码，PC用这些激活码直接可以离线永久激活。 被收购后，博通索性直接将针对PC的虚拟机产品 VMware Workstation Pro / VMware Fusion Pro 针对个人免费，直接去掉了注册激活步骤。 然而，之前流传的下载直连链接不可用了，博通网站不仅强制登陆，而且下载位置特别难找，本文就介绍免费时代的VMware桌面虚拟机产品。\n官方站点 VMware的官方首页想点出来VMwareFusion或VMwareWorkstation的产品页面着实不容易。 还是直接用搜索引擎搜索 VMware+Fusion 或 VMware+Workstation 直接来到产品页面。 点击醒目的 DOWNLOAD FUSION OR WORKSTATION 就会跳转到博通的登陆页面 如果没有博通账号需要注册，右上角的LOGIN按钮右边箭头可以下拉菜单，点击看似不能点的灰色REGISTER按钮即可进入注册流程。这配色设计简直\u0026hellip;\n注册账号 填写邮箱，可以考虑用临时邮箱以保护个人隐私。 填写邮箱收到的验证码 填写基本信息，包括姓名、国家、职业、密码，建议选择美国；创建账户后菜单会变长问一些附加服务，选择I'll do it later即可。 用刚才填写的邮箱和密码登陆。 定位下载 在右上角登陆用户名旁边的按钮下拉菜单选择 VMware Cloud Foundation 在左侧选择 All Products 在右侧产品列表上方的搜索框搜索相关产品，在搜索框中输入 \u0026lsquo;Fusion\u0026rsquo; 搜索 MacOS 版本，输入 \u0026lsquo;Workstation\u0026rsquo; 搜索 Windows 或 Linux 版本。 Fusion系列就是VMware Fusion Workstation系列选择VMware Workstation Pro功能最全，点击右侧Product Detail。 在详情页，在Release列选择想下载的版本点击即可进入下载页面 终于进入下载页面，下载按钮是灰色的，点击栏目左上方勾选I agree to theTerms and Conditions即可点击并开始下载。 免费产品下载页面 博通可能会直接提示免费产品的下载连接，还可以看看其他免费产品。 https://support.broadcom.com/group/ecx/free-downloads\n17.6.3版本下载页面链接 Linux: https://support.broadcom.com/group/ecx/productfiles?subFamily=VMware%20Workstation%20Pro\u0026displayGroup=VMware%20Workstation%20Pro%2017.0%20for%20Linux\u0026release=17.6.3\u0026os=\u0026servicePk=\u0026language=EN\u0026freeDownloads=true Windows: https://support.broadcom.com/group/ecx/productfiles?subFamily=VMware%20Workstation%20Pro\u0026displayGroup=VMware%20Workstation%20Pro%2017.0%20for%20Windows\u0026release=17.6.3\u0026os=\u0026servicePk=\u0026language=EN\u0026freeDownloads=true 安装激活 VMware是非常用户友好的商业产品，安装类似其他软件:\nMacOS上拖拽 Windows双击后根据提示下一步即可 Linux用sudo运行后根据提示进行即可，如果有桌面和Windows一样，如果用字符界面，你还能看不懂提示？ 附：校验信息** VMware Workstation Pro for Linux\n16.2.5\nName:\tVMware-Workstation-Full-16.2.5-20904516.x86_64.bundle Release Date: 2022-12-13 Build Number: 20904516 MD5SUM:\t0a69f5cff1f7c36d2d80f6393230effa SHA1SUM: b010b67e1bf79bd63bad4d2e2047bc89a51266fa SHA256SUM: 3ee36946b15e3093fd032115f5b6e5dabf4081f54756d5e795b4534473ea53e7 17.6.3\nFile Name:\tVMware-Workstation-Full-17.6.3-24583834.x86_64.bundle(335.21 MB) Build Number:\t24583834 Release Date:\tMar 04, 2025 Last Updated:\tFeb 27, 2025 SHA2:\t79575917728ded4c6d0b89f4ab6a81be9a773c00eeb68d1d12ac0db125478ee0 MD5:\t01559c427a4b47547e67026320c77738 VMware Workstation Pro for Windows\n16.2.5\nName:\tVMware-workstation-full-16.2.5-20904516.exe Release Date: 2022-12-13 Build Number: 20904516 MD5SUM:\tb72276af0d1f093c146c6623c463218f SHA1SUM: 01ddbeb179444bb6bf9ee41e070de362c6134ce9 SHA256SUM: 380b0fa8a0f37ade496573cdc2ad922d3985bc83664f94431a9e513444b6c377 17.6.3\nFile Name:\tVMware-workstation-full-17.6.3-24583834.exe(401.43 MB) Build Number:\t24583834 Release Date:\tMar 04, 2025 Last Updated:\tFeb 24, 2025 SHA2:\td7c04b4dd1e6bf551693897d4805e99c45198a830c6361d9af8267b40906857b MD5:\tde592b18a39513e3414f197ec1a4cb1c ","date":"2025-05-10T01:59:15Z","image":"https://localfreedom.github.io/img/vmware-logo-grey.svg","permalink":"https://localfreedom.github.io/p/%E8%A2%AB%E5%8D%9A%E9%80%9A%E6%94%B6%E8%B4%AD%E5%90%8E%E5%85%8D%E8%B4%B9%E7%9A%84-vmware-workstation-pro-%E4%B8%8B%E8%BD%BD%E6%96%B9%E6%B3%95/","title":"被博通收购后免费的 VMware Workstation Pro 下载方法"},{"content":"背景 从信息时代来到人工智能时代，掌握自己的信息系统越来越重要。 将自己的数据握在自己手中，摆脱大公司的监视干预是本站的价值观。 操作系统可以说是个人信息系统的重要基础，尤其是微软的Windows越来越绑定网络，将用户束缚在微软的服务中，探寻一下非大公司控制，可自己掌握支配的操作系统愈加必要。 今天咱就来聊聊操作系统选型，希望帮大伙找到适合自己的能够把握的操作系统。\n概览 Windows应该是存在感最强的操作系统，伴随着PC的普及走进千家万户。 随着移动互联网发展Android和iOS也走进千家万户。 除了这些大公司运营的操作系统生态，其实还有Linux、BSD等系列操作系统，它们通常开源，将一切权力交给用户，有些用户体验已经打磨的不输商业操作系统，尤其是在服务器领域Linux更是占据霸主地位。 本文讨论的重点就是Linux操作系统。\n各个系列的操作系统 Windows 微软公司开发的商业软件，简单易用普及。 Windows 98/XP/7/10/11 等面向PC的操作系统，包括家庭版、商业版等。 Windows Server 2008/2016/2019/2022 等面向服务器的操作系统。 Linux 源自芬兰大学生Linus，在GPL许可证约束下开放源代码。 debian/arch/gentoo/alpine 等依靠开源社区自发演进的。 RedHat/SUSE 等依靠商业公司运营服务。 BSD 老Unix操作系统的社区维护版本，源自Berkeley校区。 OpenBSD/FreeBSD 等。 MacOS 苹果公司运营的商业操作系统，大公司包办一切。 只有主线版本。 Android Google采用Linux内核为移动设备开发的操作系统，在GPL约束下开源。 各手机厂商基于开源部分定制自己的专属系统。 LineageOS/eOS 等社区开发的操作系统。 iOS 苹果公司移动设备的操作系统，极度封闭。 欧盟正在撼动其封闭生态。 Other 操作系统其实并不复杂，好好学习也可以写出自己的操作系统。 ChromeOS/FirefoxOS 就是厂商新推出的小众操作系统。 如何选择属于自己的操作系统 属于自己的操作系统最重要的是自己想用就可以用，最好想怎么用就怎么用。 过于依赖网络的操作系统，比如ChromeOS/iOS当然就要排除在外了。 即使大公司不作恶，也有可能停止服务。\n属于自己的操作系统应当能够在硬件上自行安装，最好安装好就附带常用功能。 不得不说这方面Windows还是不错的，就像他们广告中说的，买了Windows同时拥有了计算器、日历、文本编辑器等等一系列软件功能。\nPC和移动设备面对的情况大相径庭，即使都是Linux也是差异很大的分支。 针对不同类型的设备还是要用不同的标准来选型。 尤其是硬件驱动，在移动设备上比较难搞，而PC上Windows驱动必然都有，Linux通常也不缺什么。 本文主要针对PC设备，其他设备有空再详细介绍。\nPC的操作系统也通常称为桌面端的操作系统，主要有Windows/Linux/BSD/MacOS四类。 BSD太过于小众，就暂不多介绍了。 MacOS几乎没得选，捆绑苹果设备，也没有分支。 接下来先简单回顾一下Windows，然后着重介绍Linux系列操作系统选型。\nWindows Windows操作系统分为面向PC的版本和面向服务器的Server版本。\nServer版本继承了很多服务器的功能，且有严格的重启和断电管理，但对于个人使用反而缺少很多功能，激活和安装软件也比较麻烦。\n面向PC的版本分为家庭版、专业版、旗舰版、企业版、工作站版等，根据地域还有区分，比如中文定制版或欧盟的版本。 这些版本随着价格增加功能也越多，通常功能上: 家庭版\u0026lt;专业版\u0026lt;旗舰版~=企业版~=工作站版本。 欧盟的版本由于反垄断通常去掉了媒体播放器等一些自带软件。 中文定制版就不用理会了，没人会主动选择它的。\n值得一提的是自Win10开始出现的LTSC——长期支持版。 这算是官方精简版，去掉了应用商店和各种奇奇怪怪的应用，原始风味的Windows体验，基础功能等同于企业版。 在Win7时代也有类似的Thin版本。\n这里推荐MSDN,Itellyou，一个提供Windows官方镜像P2P链接的网站。\nLinux 内核+发行版 所谓的“内核”，通俗地说就是操作系统最核心最关键的部件。 它负责一些最基本的工作，比如: 管理硬件驱动、管理内存、管理文件系统、管理进程等等。 这些东西只要少了任何一样，整个操作系统就不能正常运转。\nLinux系列操作系统的内核一直是由 Linus 领导开发，采用GPLv2开源协议，任何人都可以随意获取、免费获取、参与开发。 同时所有基于Linux内核开发的操作系统也必须开源，允许大伙获得源代码。 Windows也有其NT内核，但Windows通常整体打包发布，所以其内核没有存在感。\n操作系统在除了内核，通常还应当提供命令行、图形界面、运行库等。 由于Linux内核高质量且开放，有很多爱好者和商业公司基于Linux内核整合配套软件打包发布形成发行版。 选择Linux操作系统就是选择一个适合自己的发行版。\n发行版的选择 首先推荐网站 https://distrowatch.com。 这是知名的操作系统排名网站，收录并列出各个操作系统的新闻，根据访客点击不同操作系统(发行版)的次数给出一个排名。 这个网站主要收录Unix/Linux及其衍生品，并不包含Windows和MacOS。\nDistroWatch的搜索页面提供了很多选项用于筛选发行版，可以作为我们选择发行版时的首要参考。\nOS Type 操作系统的派系，这里当然选Linux。 Distribution category 发行版类型或者说面向的需求，比如新手(Beginners)、桌面(Desktop)、瘦客户端(Thin Client)、游戏(Gaming)、移动设备(Mobile)等。 个人认为这个分类不够完善，很可能漏掉或冗余。 Country of origin 源自哪个国家，开源社区无国界开发者有国籍:) Based on 基于哪个发行版，发行版的衍生类似树状，如果偏爱哪个基础发行版，可以通过这个选项看看他的变种。 Not based on 不基于哪个发行版，同上，排除你从根上就不喜欢的发行版。 Desktop interface 桌面，或者说图形介面更完整。 Linux的多样化也体现在桌面环境，可以搭配完全不同的桌面，这可不是换换壁纸或者主题，类似从Windows桌面和MacOS桌面的那种区别。 其中的选项也不都是严格意义上的桌面，有些则是窗口管理器(可以简单的理解为没有任务栏的桌面)等桌面组件；因为Linux的自由，桌面不必都是完整的，可以自由搭配窗口管理器、登陆管理器、合成渲染、菜单栏、任务栏等。 这里列举三种主流桌面方案： KDE 模仿Windows，提供完善的图形化设置，附带很多高质量配套软件。 GNOME 越来越像MacOS，模仿Linux的发展方式，专注桌面核心组件，默认精简。 Xfce 相对轻量级的桌面环境，有点像WinXP的风格，低资源占用。 主流发行版通常都提供这三种桌面可选，如果从Windows迁移过来，推荐从KDE入手，复刻Windows的体验，默认配置通常也最完善好用。 Architecture 架构，通常都是 x86_64。 Package management 包管理方式，发行版的软件包基于哪种模式管理，也算是选择发行版的派系。 DEB由Debian发行版社区创建，也被Ubuntu等发行版继承,历史悠久，社区文化，配置文件可读友好。 RPM有红帽公司开发用于其RHEL发行版，Fedora/SUSE等也采用，配置方式大量采用二进制文件。 Pacman是Arch发行版的包管理方式，衍生至Manjaro等发行版，结构相对扁平简洁。 Release model 发行模式，是定期发布版本还是滚动更新，有没有长期支持LTS本 滚动更新提供最新版本的软件，但也意味着频繁的更新和更多的漏洞。 推荐有 LTS 支持的定期发布版本的发行版，LTS会在新的版本发布后仍然对老版本提供几年的安全补丁，运行也会更稳定。 就像Windows，面向企业的Linux发行版RHEL/SUSE等都是LTS模式。 Install media size 安装介质大小，通常都比Windows安装盘小，这个选项本身没什么意义。 Install method 安装方式，分为Local(本地安装),Net-Install(网络安装),OEM(出厂自带)。 当然选择本地安装喽，也可以看看OEM有哪些硬件厂家提供。 本地安装介质通常分为两种Installer和Live。 Installer安装镜像通常4GB，有一定的定制空间和额外软件包，就像Windows的安装盘。 Live安装镜像通常能提供不错的开箱即用的体验，是强化的PE系统。 Web安装镜像通常最小但如果没有网络可能无法完成最小化安装。 Multi-language support 多语言支持，主流发行版都支持中文，如果不支持中文可以pass掉。 Init software 初始化软件，这个选项是给资深有追求的用户准备的，暂且不管。 当前红帽公司主导的Systemd是最主流的选择。 Status 状态，当然要是活跃Active的发行版。 推荐部分发行版 Debian DEB包管理框架，大约每2年发布一个版本并提供5年的LTS支持，本地安装以Installer为主，最近也开始提供Live镜像，默认GNOME桌面，在Installer镜像中同时包含选择KDE和Xfce所需文件。 完全社区开发的发行版，自由分为浓厚，其软件源也着重区分包是否开源，到12版才官方集成非开源的驱动程序。 Debian是通用操作系统，能稳定的运行于服务器上，对PC也有友好的界面。 软件源相对保守，版本发布后只提供安全补丁，不引入新功能，安全稳定的同时可能略显陈旧，debian虽然有backports通道提供新版本软件包，但默认是不启用的，当然也可以自己用deb包安装软件或者添加第三方软件源。 在Linux内核选择上，使用版本发布当年的LTS内核并随内核社区一起提供长期支持。 Linux Mint DEB包管理框架，基于Debian/Ubuntu，随UbuntuLTS版本每两年发布，提供Live镜像，暂无Installer镜像，默认Cinnamon桌面从GNOME分支而来保留GNOME2风格。 社区为了摆脱Ubuntu背后商业公司的影响而分支的发行版，有着Ubuntu的友好，更加自由，曾登顶DistroWatch榜首；Ubuntu强推snap商店并把软件源中的包搬到商店的行为让我们选择LinuxMint。 在Ubuntu软件源基础上，将移动到snap商店的软件包恢复到deb源，还提供额外的驱动管理等用户友好组件。 LTS支持跟随Ubuntu，与Debian略有不同，会提供软件包的小版本更新，用于PC可以尝试较新的版本，内核版本与Ubuntu同步并不一定是LTS内核而是有Ubuntu提供内核的长期支持。 OpenSUSE RPM包管理框架，来自德国，随企业版SUSE发布，提供滚动更新的Tumbleweed版和定期更新的Leap版，本地安装以Installer为主，同时也提供Live镜像，默认KDE桌面，Installer中多种桌面可选，提供非常全面的开箱即用体验。 非常稳定精良的设计，尤其是其Yast可比Windows的控制面板，几乎可以平替Windows。 提供很多图形化的服务器管理功能，用于PC可能显得过于完善。 Manjaro Pacman包管理框架，基于Arch滚动更新，相对保守一些进行更多测试放慢节奏，提供Live镜像，默认KDE桌面，开箱即用。 官方号称给Arch的软件包增加额外的测试和缓冲器，只同步安全补丁。 在Arch基础上对商业软件更加友好，软件源中有discord等热门商业软件。 实现局域自由的关键路径 操作系统是自由使用计算机设备的基础，也算是实现局域自由的关键一环。 Linux以其开源自由的特点，广泛活跃的社区，可以作为操作系统的首选，尤其是提供LTS支持的发行版作为主力系统真是非常靠谱。 Windows虽然是封闭商业软件，但本地自由使用难度并不大，考虑其广泛的生态，尤其是游戏娱乐，值得收录镜像以备用。\n未来有空再细谈Linux镜像源和Windows激活的话题。\n","date":"2025-04-20T06:03:31Z","permalink":"https://localfreedom.github.io/p/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%80%89%E5%9E%8B/","title":"操作系统选型"},{"content":"背景 话说，现在个人电脑开启移动热点，大家通常是为了分享网路，但更重要的，其实是打造一个属于自己的无线局域网啊！Windows 提供的热点功能，一直以来都只能用来分享网路，没法直接用在局域网里。以前还能在连接 WiFi 或有线网络的时候开启热点并保持，但现在微软越来越严格，一旦上行连接断掉，移动热点就自动关掉，真是让人头大！\nWindows 电脑通常不当做局域网服务提供者，但现在 AI 这么火，像 LM Studio 这样的软件可以提供局域网服务，仅仅开启移动热点就能满足需求，这需求量可真大啊！\n方法 1：利用底层命令，挑战微软的限制 这个方法就是利用无线网卡驱动提供的功能，通过命令行开启热点。不过，随着无线网卡更新，尤其是 Intel 网卡配合微软，这个功能经常被阉割掉。如果降级驱动还是不行，那就只能试试方法二了。\n以管理员权限启动终端(也就是CMD或PowerShell) 确认系统支持本地热点功能 输入 netsh wlan show drivers 如果输出中 Hosted network supported(支持的承载网路) 的值为 Yes，就说明可以继续使用这个方法。如果为 No，那很遗憾，只能换方法了。 配置热点信息 netsh wlan set hostednetwork mode=allow ssid=%名称% key=%密码% keyUsage=persistent 如 netsh wlan set hostednetwork mode=allow ssid=HotPoint key=Strongest keyUsage=persistent 注意：密码至少要8位哦！ （别想着用 123456 这种弱密码，会被干掉的！） 启动热点 netsh wlan start hostednetwork 启动成功后，就可以用手机等终端设备连接局域网啦！ 主机IP通常默认为 192.168.137.1, 可以用 ipconfig 命令查看。 关闭热点 netsh wlan stop hostednetwork Use Windows 10 wifi hotspot with no internet connection\n方法 2：用虚拟设备“欺骗”系统，开启离线热点 Windows 检测是否有活动的 WiFi 或有线连接，才能开启移动热点。我们可以用虚拟设备来“欺骗”它，让它以为是有网络连接。常规的虚拟机网卡是无法通过检测的，这里我们用一个老旧的虚拟测试设备。\n添加虚拟测试设备 打开设备管理器 操作-\u0026gt;添加过时硬件(如果菜单中只有帮助点击一下任一设备或类别就会刷新) 安装我手动从列表选择的硬件-\u0026gt;显示所有的硬件 左侧厂商选择 Microsoft 右侧设备选择 Microsoft KM-TEST 回环适配器 重命名虚拟测试设备 控制面板-\u0026gt;网络和Internet-\u0026gt;网络和共享中心-\u0026gt;更改适配器设置(左侧) 将KM-TEST设备重命名为Loopback(如果右键重命名无效那么选中按F2键入新名称) 重启电脑或其他方式传播网路名称。 开启热点 在cmd执行以下命令，或者直接用PowerShell执行引号中的部分。 1 powershell -ExecutionPolicy -ByPass \u0026#34;$profile = [Windows.Networking.Connectivity.NetworkInformation,Windows.Networking.Connectivity,ContentType=WindowsRuntime]::GetConnectionProfiles() | where {$_.profilename -eq \u0026#39;loopback\u0026#39;}; $tether = [Windows.Networking.NetworkOperators.NetworkOperatorTetheringManager,Windows.Networking.NetworkOperators,ContentType=WindowsRuntime]::createFromConnectionProfile($profile); $tether.StartTetheringAsync()\u0026#34; WLAN也会同时开启。 保持热点 设备管理器-\u0026gt;网络适配器-\u0026gt;你的无线网卡(不是MK-TEST而是实际物理网卡) 【右键属性】 电源管理-\u0026gt;允许计算机关闭此设备以节约电源 【解除勾选】 关闭热点 直接用任务栏上的操作按钮即可。 关闭热点是虚开的WLAN也会关闭。 win11如何才能无网络开启移动热点\n吐槽一下 Windows 的离线工作体验 说实话，现在 Windows 对离线工作的支持越来越差了。每次想在没有网络的情况下用电脑，都要跟它死磕一下。这让我对 Linux 的兴趣越来越浓厚了。看来，是时候考虑换系统了，体验一下真正的自由了！\n尤其是Win11即将进一步限制不联网安装，Windows 越来越云化，越来越限制用户，真的让人很无奈啊！\n","date":"2025-04-10T12:02:35Z","permalink":"https://localfreedom.github.io/p/win10/11-%E4%B8%8D%E8%81%94%E7%BD%91%E5%BC%BA%E5%88%B6%E5%BC%80%E5%90%AF%E7%A7%BB%E5%8A%A8%E7%83%AD%E7%82%B9/","title":"Win10/11 不联网强制开启移动热点"},{"content":"简介 LM Studio 是一个桌面应用程序，它允许你轻松下载、管理和运行各种GGUF格式的开源 LLM，无需连接互联网。 它提供了一个非常友好的配置界面，让你能够探索huggingface，快速体验不同模型的特性，并根据自己的需求进行调整。 在对各类新型模型的支持中，LM Studio 总是非常迅速完美的。 不过 LM Studio 是一个免费的专有软件，并不开放源代码。\n安装 官网的下载页面提供Windows、Linux和MacOS的下载，除了x86还支持arm64架构的CPU。 安装包是离线的，包含需要的各类运行库，安装过程完全无需联网。 第一次运行的时候会提示选项级别，默认的 Power User 即可。\n准备模型 LM Studio 支持从huggingface.co搜索并直接下载运行GGUF格式的 LLM，即量化压缩后的LLM。 但本文的重点是完全离线运行，当然应避免联网功能。\n一个理所当然的方法是下载GGUF模型文件放置在 LM Studio 的模型文件夹 ~\\.lmstudio\\models\\ 中，不过这样并不能直接被软件识别。 LM Studio 的解析方式是按照 Hugging Face 模型仓库的 URI 格式来识别模型文件，所以只要按照 ~\\.lmstudio\\models\\作者\\模型名\\参数文件.gguf 的方式导入 LLM 文件即可。\n作者和模型名可以自己命名，也可以就按照默认方式来，如从 https://huggingface.co/bartowski/mistralai_Mistral-Small-3.1-24B-Instruct-2503-GGUF/blob/main/mistralai_Mistral-Small-3.1-24B-Instruct-2503-Q4_K_M.gguf 下载的文件放在 ~\\.lmstudio\\models\\bartowski\\mistralai_Mistral-Small-3.1-24B-Instruct-2503-GGUF\\mistralai_Mistral-Small-3.1-24B-Instruct-2503-Q4_K_M.gguf\n将模型文件放置完成后，打开 LM Studio 点击左侧文件夹图表的 Models 标签页即可看到下载的文件。 列表中还会列出模型的各项参数和功能。\n对话 在打开的初始界面，上方选择模型文件加载，可以配置一些参数，通常默认的就足够好了。 等待加载完成就可以在下方与 LLM 对话了。 目前支持上传图片和附件，只要LLM支持相关功能就可以使用。\n提供服务 LM Studio 可以提供兼容 OpenAI v1 的API服务，可以作为局域网中便捷的LLM基础服务，与各种客户端应用程序配合使用。 点击左侧第二个按钮，进入开发者界面即可开启OpenAI兼容API服务。 默认其监听0.0.0.0的1234端口，图形界面提供复制的IP地址可能不合适。\n","date":"2025-03-27T10:03:25Z","permalink":"https://localfreedom.github.io/p/lm-studio/","title":"LM Studio"},{"content":"背景 MS Office 是日常工作和生活的重要工具，离线部署激活当然必不可少。 微软越来越在线化Office业务，甚至从2016版本后不再提供官方ISO了。 为了实现局域的自由，当然不可随便整点盗版安装包来部署Office，本篇就介绍用官方的方式离线部署MS Office。 Office Deployment Tool 是微软官方推出的Office套件部署工具。 微软从Office2016后期开始推出C2R模式,不再维护离线文件替换式补丁，同时向企业系统管理员推广ODT工具用来部署Office。\n用法 获取ODT 官网下载页面 下载的是一个exe可执行档，记得用管理员权限执行，会解压出 setup.exe 和样例配置文件。\n准备配置文件 可以根据样例配置来修改自己的配置文件。 推荐在官方提供的配置创建页面 https://config.office.com 用视觉化的方式选择你需要的软体和语言。\n由于配置中不是包含各组件，而是排除各组件，所以生成配置的时候关闭所有组件可以获得最好的模板效果。 这里以 Office LTSC 2021 为例。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 \u0026lt;Configuration\u0026gt; \u0026lt;Add OfficeClientEdition=\u0026#34;64\u0026#34; Channel=\u0026#34;PerpetualVL2021\u0026#34; Version=\u0026#34;16.0.14332.20812\u0026#34;\u0026gt; \u0026lt;Product ID=\u0026#34;ProPlus2021Volume\u0026#34; PIDKEY=\u0026#34;FXYTK-NJJ8C-GB6DW-3DYQT-6F7TH\u0026#34;\u0026gt; \u0026lt;Language ID=\u0026#34;zh-cn\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Access\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Excel\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Lync\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;OneDrive\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;OneNote\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Outlook\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;PowerPoint\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Publisher\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Word\u0026#34; /\u0026gt; \u0026lt;/Product\u0026gt; \u0026lt;Product ID=\u0026#34;VisioPro2021Volume\u0026#34; PIDKEY=\u0026#34;KNH8D-FGHT4-T8RK3-CTDYJ-K2HT4\u0026#34;\u0026gt; \u0026lt;Language ID=\u0026#34;zh-cn\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Access\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Excel\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Lync\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;OneDrive\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;OneNote\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Outlook\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;PowerPoint\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Publisher\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Word\u0026#34; /\u0026gt; \u0026lt;/Product\u0026gt; \u0026lt;Product ID=\u0026#34;ProjectPro2021Volume\u0026#34; PIDKEY=\u0026#34;FTNWT-C6WBT-8HMGF-K9PRX-QV9H8\u0026#34;\u0026gt; \u0026lt;Language ID=\u0026#34;zh-cn\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Access\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Excel\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Lync\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;OneDrive\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;OneNote\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Outlook\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;PowerPoint\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Publisher\u0026#34; /\u0026gt; \u0026lt;ExcludeApp ID=\u0026#34;Word\u0026#34; /\u0026gt; \u0026lt;/Product\u0026gt; \u0026lt;/Add\u0026gt; \u0026lt;Property Name=\u0026#34;SharedComputerLicensing\u0026#34; Value=\u0026#34;0\u0026#34; /\u0026gt; \u0026lt;Property Name=\u0026#34;FORCEAPPSHUTDOWN\u0026#34; Value=\u0026#34;FALSE\u0026#34; /\u0026gt; \u0026lt;Property Name=\u0026#34;DeviceBasedLicensing\u0026#34; Value=\u0026#34;0\u0026#34; /\u0026gt; \u0026lt;Property Name=\u0026#34;SCLCacheOverride\u0026#34; Value=\u0026#34;0\u0026#34; /\u0026gt; \u0026lt;Property Name=\u0026#34;AUTOACTIVATE\u0026#34; Value=\u0026#34;1\u0026#34; /\u0026gt; \u0026lt;Updates Enabled=\u0026#34;TRUE\u0026#34; /\u0026gt; \u0026lt;RemoveMSI /\u0026gt; \u0026lt;/Configuration\u0026gt; 独立的Visio和Project会沿用主体的排除项，其实没有作用。 官方页面生成的配置文件开头有个ID,建议去掉以免追踪。\n获取Office 新建一个用于存放office的资料夹并进入。 将XML配置文件(如config.xml)和ODT的setup.exe放在这个资料夹中。 打开命令提示字元(cmd or PowerShell)，进去你的资料夹后，执行setup.exe /download config.xml。 命令提示字元中无提示，打开任务管理器可以看到流量，文件会下载到当前资料夹的Office\\Data中。 PowerShell有时候会莫名卡住，所以下载中可以在命令提示字元里按按退格BackSpace等无影响的键。\n(可选)制作ISO光碟映像档 你可以用一些脚本程式来自动化安装过程。\n1 setup.exe /configure config.xml 建议将ODT、下载的Office、安装配置文件和其他需要打包的放在同一个资料夹，然后用UltraISO等工具制作ISO光碟映像档。\n部署Office 将ODT下载完成时的资料夹整体接入目标系统，主要保持 setup.exe, Office\\Data, config.xml 在同一资料夹中。 进入命令提示字元到该资料夹，执行setup.exe /configure config.xml。 会显示安装进度和所包含组件，但这一过程不能中断或配置，只能看着。 等待完成就可以使用所安装的Office了。\n评测 ODT工具是不断更新的，所以存档时的必要测试，以免收录bug版本。\n样例配置文件和前一版是否有变化，增加或减少，内容修改。 setup.exe 是否支持了新版本的Office,比如LTSC2024之前的setup.exe无法下载。 setup.exe是否仍保留了对Office2021等老版本的支援。 setup.exe能否正常完成所需Office的安装。 ","date":"2024-12-22T03:09:53Z","permalink":"https://localfreedom.github.io/p/office-deployment-tool/","title":"Office Deployment Tool"},{"content":"背景 一提到加密货币与挖矿，很多中国读者有着很深的误解与偏见，这实际上与中国政府及其控制的媒体、自媒体的宣传导向有关。\n非常感谢自由之心社区的科普文章\n定义 加密货币是一种使用密码学原理来确保交易安全及控制交易单位创造的交易介质。这种维基百科式的描述较难懂。我们尝试用更简单的语言进行描述。加密货币的鼻祖是比特币(BTC)，其始发与 2009 年。在比特币的创世区块中，嵌入了一句话The Times 03/Jan/2009 Chancellor on brink of second bailout for banks.。这对传统金融行业进行了讽刺，同时表明了创始人中本聪的立场。符合比特币理念的加密货币一般都有如下特点：\n去中心化，货币的分布和决策不由中心化的组织，如政府，银行等任何集权形式的组织决定。参与挖矿，就能得到属于自己的一份收益。 在正确使用的前提下，一般都能很大程度的保护使用者的个人隐私。 货币本身真正由其拥有者所持有，真正实现了私有财产不可侵犯。货币的拥有者持有私钥，其他没有私钥的人无法扣押、冻结、没收其加密货币资产。 离线意义 金融之于社会，犹如血管之于人体。 金融和货币的最大特点就是流动和在线，经济情况也可以看作金融货币流通速度。 我们的大额金融资产都被掌控在中心化的银行手中，有效率上的好处，但也失去了对财产和储蓄的掌控。 银行可以冻结我们的金融财产，还可以滥发货币稀释大家的储蓄。 以比特币为代表的加密货币，给我们一种新的方式掌控自己的金融资产。 加密货币通常被设计为总量有限或增速有限，也就不会通货膨胀。 加密货币通过公钥和私钥将金融账户的\u0026quot;读写\u0026quot;权限分开，私钥能操作和支付，而公钥能查阅和收款。 只要销毁自己的私钥，任何人或组织都无法再夺走私钥保护的财产。 这也导致如果有钱人销毁私钥或死亡前没传承私钥，那么通货紧缩就难以避免。 这里佩服中本聪的伟大设计，比特币随着开采量增加而开采速度下降，既抑制了快速通胀，又避免了终极通缩。\n加密货币最大的离线意义在于其基于区块链的分布式账本，用户可以完整的获取整个账本，不仅保存自己的财产，还能离线掌握整个系统的交易历史，离线作做各种有趣的事情。 同样加密货币的离线保存和携带，也因密码学而可靠和便捷。\n区别于\u0026quot;数字货币\u0026quot; 有个概念数字货币和加密货币很像，尤其中国人民银行大肆鼓吹所谓\u0026quot;央行数字货币优于比特币等数字货币\u0026quot;。 当然这些概念确实还有争议，但中国的央行数字货币完全就是蹭热度的玩意儿。 数字货币通常局限于采用区块链等密码学技术的银行发行控制的货币，相比于比特币代表的正经加密货币，缺少了区中心化的关键特性，从而损害了用户的掌控能力。 中国的所谓\u0026quot;数字人民币\u0026quot;，博主认为连数字货币也算不上，充气量就是个用电脑记账的电子货币。 尤其是数字人民币背道而驰，设计初衷就是为了奴役社会经济。\n使用 基本概念 密语即助记词，约等于私钥，可以互相转化。 密语通过一定方式由私钥编码，一条密语通常由十几个单词组成，可对应多个私钥。\n公钥和私钥是成对生成的，地址是公钥的散列。 地址不能反推出公钥。\n收款只需要地址，付款才需要公开公钥，一个钱包只要消费一次公钥就公开\n存储 如果要使用加密货币，首先要拥有一个钱包来存钱。 钱包是存储私钥的介质，分为热钱包(软件)和冷钱包(硬件)。 各个加密货币的节点软件就是全量热钱包，不仅能生成并记录自己的私钥，还保存账本，能参与挖矿。 为了方便一般使用可以采用只记录私钥，查看账目的软件，比如目前来说使用最广泛的浏览器钱包是Metamask。 冷钱包是类似USBkey的硬件，通常可以用U盘写入相应工具软件自行制作。\n私钥本质上是很长很长的随机数，所以钱包使用必然是无需手机号或邮箱注册的。 甚至生成账户也是无需联网的。\n获取 可以通过购买、交易、挖矿的方式获取加密货币。\n购买即通过类似币安这样的平台用人民币等传统货币来购买加密货币。 这一过程会将自己的实名金融账户和加密货币账户关联起来，对于中国用户更是高风险。\n交易是用已有的加密货币或商品通过市场兑换其他人手中的加密货币。 暗网中的黑市中加密货币流通规模日益增长，各类加密货币兑换平台也层出不穷，比如changenow。\n挖矿是参与加密货币交易的确认过程，从机制中获得相应的回馈。 加密货币因为离线的特性，可以同时将一笔钱付给多人，只有优先算出结果的分支交易会被确认。 为了鼓励用户提供算力完成交易，参与交易确认(挖矿)的用户会获取一些手续费，而且越是小额的交易费率越高。\n消费 加密货币目前主要适合购买数字产品，比如支持加密货币购买的VPS。 GOG等游戏平台也支持一些主流加密货币付款。 当然，还可以将加密货币换回自己的法币，实现类似炒股的效果。\n典型加密货币 最后介绍三种各具特色的加密货币。\nBTC Bitcoin https://bitcoin.org\n比特币，加密货币的始祖，世界上首个加密货币，也是目前总市值最大的加密货币。\nETH Ethereum https://ethereum.org\n以太坊，基于加密货币的平台，极大的扩展了加密货币的功能和社区。 各种智能合约、分布式游戏、数字藏品就来自于以太坊的开创性贡献。\nXMR monero https://www.getmonero.org\n门罗币，主打隐私的货币，通过环等技术混淆转账过程，让监控者难以在公开的账本上追踪账户。 同时，读取账户金额的过程也需要更大流量，有损便利性。\n如果你需要匿名购买加密货币的渠道，可以考虑使用localmonero提供的购买门罗币的服务。在购买后门罗币地址间的互转是匿名的，对外部不可见的。 当然也不绝对，追求匿名的用户还是应该尽量避免金融操作。\n","date":"2023-12-18T11:53:49Z","permalink":"https://localfreedom.github.io/p/%E5%8A%A0%E5%AF%86%E8%B4%A7%E5%B8%81/","title":"加密货币"},{"content":"简介 想要离线自由怎么能少了娱乐呢？\n固然可以收集各种盗版单击游戏，但现在有了正版的提供完全可离线的游戏的平台，在享受离线自由的同时还能用自己的购买为游戏投票和赞助，这就是本文要推荐的GOG。\nGOG.com是一家提供电子游戏等数位商品发行平台，它由GOG公司运营，母公司为CD Projekt(波兰蠢驴)，总部位于波兰华沙。GOG.com通过无数字版权管理（DRM-free）的方式提供适用于Windows、OS X和Linux平台的电子游戏。在早期，GOG只發行年代較久的遊戲，自2012年3月，它开始售卖较为新款的游戏。 2017年6月22日，GOG.com加入了简体中文支持以及人民币结算，包括支付宝、银联、微信支付等方式。\nDRM-free意味着从GOG.com购买的电子游戏可以直接获得离线安装包，没有任何安装次数或设备的限制。当然正规平台也没有版权风险或被捆绑恶意软体的风险。也便于充分实现单机游戏的匿名游玩，你完全可以注册账号购买游戏，用钱行使赞助的权利，然后从任意渠道获得的安装包进行游戏。\n离线用法 从GOG.com的网页就可以直接下载游戏安装包，购买游戏后在库里选择下载，避开醒目提示的Galaxy客户端提示，选择下载离线安装文件即可。 也可以通过BT等手段从其他地方获取安装文件，Windows版本的可以通过数字签名来确认是否来自官网。 GOG官方还特别良心的提供了安装前校验功能，并将安装包拆分为安装器和多个数据文件。如果官网速度不佳，可以只下载安装器然后校验其他方式得到的数据文件并安装即可。\n这里的安装包都是无需联网验证和激活的，即免DRM。 只要在任意满足基本要求的电脑上运行安装包即可游玩儿。 当然离线游玩是没有成就之类的在线功能的。\n通常离线安装包会携带必要的依赖库，但自己储备一些常用的以来库对于离线娱乐等也是很必要的，考虑有空另写一篇博文将将离线库文件的收集整理。\n游戏推荐 自家作品 创建GOG的公司CDProjekt自身就出品很多高质量游戏，最近对简体中文支持越来越好，即使不玩游戏也建议去视频网站上体验一下普通话配音效果。\n巫师系列 The Witcher: Enhanced Edition The Witcher 2: Assassins of Kings Enhanced Edition The Witcher 3: Wild Hunt - Complete Edition 赛博朋克系列 Cyberpunk 2077: Ultimate Edition 经典上架 也有很多经典游戏在GOG上架。\n上古卷轴系列 The Elder Scrolls IV: Oblivion - Game of the Year Edition Deluxe The Elder Scrolls V: Skyrim Anniversary Edition 骑马与砍杀 Mount \u0026amp; Blade: Warband 博德之门系列 Baldur\u0026rsquo;s Gate 3 值得期待 也有很多游戏被大众期待，GOG上有个愿望汇总列表。暗黑破坏神、侠盗猎车手、全面战争等都在榜上。 吐槽一句，玩儿了赛博朋克，博主已经决定侠盗猎车手不上架GOG绝不买。\n","date":"2023-12-09T03:02:33Z","permalink":"https://localfreedom.github.io/p/gog-%E6%B8%B8%E6%88%8F%E5%BA%93/","title":"GOG 游戏库"},{"content":"离线知识库工具 kiwix是一个离线查看维基百科的自由软件，采用zim格式压缩维基百科数据以供离线使用。 当然，任何网页文档如果压缩成zim格式都可以用kiwix查看，社区也制作了各种软件、服务等的文档。 可以说kiwix是实现自由的离线生活的重要基础设施。 关键kiwix还集成实现了全文检索功能。\nkiwix支持Windows、MacOS/iOS、GNU/Linux、Android等，可以说是完全跨平台软件，也有很好的国际化多语言支持。 软件很小巧值得收藏。 kiwix还有Firefox插件版本可以体验。 博主测试浏览器插件使用效果目前还不太稳定。\n离线知识库 资源网址 https://library.kiwix.org 列出了官方背书的知识库，可以筛选查找。\nhttps://download.kiwix.org/zim/ 这里可以下载官方的资源。\n各种版本 维基百科是分语言的，可以选择只下载自己常用的语言和英语版本。 每种语言有完全版本(all)和精选版本(top)。 网站还区分了最大版(maxi)、无图片版本(nopic)和精简版(mini)。\n比如 https://download.kiwix.org/zim/wikipedia/wikipedia_zh_all_nopic_2023-10.zim 就是维基百科-中文-完全-无图片版本。\n其他各种资源基本都有语言的区分，但通常没有维基的那么大，也就不分有无图片了。 目前官网已经收录了超过1000种百科文档，比如各种Linux发行版的wiki、mooc、问答社区等。\n下载方式 直接下载，从网页直接点击下载。 BT下载，在zim下载连接后面加上.torrent即可下载种子文件，然后用喜欢的BT工具下载即可。 镜像下载，很多镜像站会镜像整个数据网站也可以去那里下载。 zim文件不必及时更新，反正就是离线查看。但每次更新一定要检查打开后图片展示、连接跳转等是否正常。如果发现新版本zim体积减小也要留意，毕竟知识库这种东西一般应该是单调递增的，减小了不免怀疑是否有删减。\nkiwix的意义 kiwix可以让我们不依赖网络而高效的查阅知识，实现离线的自由。 既然离线使用，当然避免了各种广告、追踪等，是ungoogle的隐私主义者的利器。 离线资源的传播可以让真理走向世界的每一个角落，启蒙缺乏互联网的难民儿童，当然还有天朝的愚民。\n","date":"2023-12-03T03:58:12Z","permalink":"https://localfreedom.github.io/p/kiwix/","title":"kiwix"},{"content":"LaTeX介绍 LaTeX(LATEX，音译“拉泰赫”)是一种基于ΤeΧ的排版系统。区别于MSOfficeWord这类的所见即所得形式的编辑，LaTeX是一种代码式的排版工具，善于用命令精确规范文档的格式。 可以把LaTeX和TeX的关系比作STL和C++的关系。这里配置的环境当然也是包括TEX的。\nLaTeX的写作环境就像编程，分为编译引擎和编辑工具。 编译引擎现在通常选择TexLive发行版。 编辑工具可以使用任意文本编辑器，如notepad,vim,emacs,gedit,vscode等。 有一些专门用于LaTeX的编辑软件，按alternativeto的排序如LyX,TexMaker,TeXstudio,MiKTeX,Kile,Gummi,TeXworks,Latexila等。\n安装LaTeX(TexLive) 下载 LaTeX官网 并不直接提供下载，而是像Linux一样选择发行版。 这里推荐最跨平台的TexLive版本，网页很朴素可以看到如下获取选项：\nWays to acquire TeX Live: download, on DVD, an ISO image or via torrent, other methods. 完全安装大约有7G，联网安装很慢容易断，所以不要直接点download，而是选择an ISO image or via torrent。\n接下来随便怎么下载，下好后用页面上提供的sha256或其他checksum检验一下就好。 如此伟大的软件当然应该把其签名公钥纳入自己的GPG。这里就不详谈密码学和公钥信任体系了。\n下载好ISO文件并用sha256检验完整后，用虚拟光驱打开光盘。现在Ubuntu和Win10等系统应该都是自带虚拟光驱功能的。\n安装 进入光盘根目录。\nLinux/MacOS上执行install-tl，Windows执行install-tl-windows.bat。 Linux如果安装了perl-tk包的话可以加上-gui参数开启图形界面，不过字符界面安装已经足够好用了。\nInstalling TeX Live 2023 from: ... Platform: x86_64-linux =\u0026gt; ’GNU/Linux on x86_64’ Distribution: inst (compressed) Directory for temporary files: /tmp ... Detected platform: GNU/Linux on Intel x86_64 \u0026lt;B\u0026gt; binary platforms: 1 out of 16 \u0026lt;S\u0026gt; set installation scheme: scheme-full \u0026lt;C\u0026gt; customizing installation collections 40 collections out of 41, disk space required: 7620 MB (free: 138718 MB) \u0026lt;D\u0026gt; directories: TEXDIR (the main TeX directory): /usr/local/texlive/2023 ... \u0026lt;O\u0026gt; options: [ ] use letter size instead of A4 by default ... \u0026lt;V\u0026gt; set up for portable installation Actions: \u0026lt;I\u0026gt; start installation to hard disk \u0026lt;P\u0026gt; save installation profile to ’texlive.profile’ and exit \u0026lt;H\u0026gt; help \u0026lt;Q\u0026gt; quit 看说明可选择V进行可移动安装，这个看个人习惯，后续步骤一样。\n大写字母D设置安装路径。\n然后再输入大写字母I就可以安装到磁盘。\n注意P选项，暂存配置但下次打开运行安装程序并不会自动读取，最好一气呵成，反正也没几个设置的。\n这一套装完几乎会用到的宏包(依赖)就都齐全了，而且包括CTEX中文套件。\n注意 安装结束的时候会有提示将路径加入环境变量$PATH。 Linux也可以考虑从发行版仓库里安装texlive-full。 建议不要精简安装，中文涉及的依赖很复杂。 编辑器VSCode 选择理由 轻量，占用资源少。 用户多，文档和资料多，便于调试。 免费，微软开源软件，官方有移动版，还有更自由的替代品VSCodium。 有很好的插件latex-workshop，便于对中文特殊情况做灵活的配置，而且在VSCodium也默认可用。 安装 VSCode或VSCodium 官网下载 推荐非管理员权限的安装方式。 官方Linuxdesktop文件 latex插件 点开左侧的EXTENSION按钮 搜索latex，选择latex-workshop安装。 fonts字体 通常作品的编译需要adobe字体，Linux下可能需要Windows字体 Linux下建议用字体管理器安装到用户目录 Linux下可能出现字体文件名大小写的问题 adobe的opentype字体可以考虑复制到C:\\texlive\\2023\\texmf-dist\\fonts\\opentype\\adobe 配置 vscode File-\u0026gt;Preferences-\u0026gt;Settings 搜索tele，禁用远程遥测 搜索auto，禁用自动更新 latex-workshop 左侧插件菜单点击设置，搜索recipes，或在全局设置搜索latex-workshop.latex.recipes 点击Edit in settings.json 设置包含recipes和tools两部分，如果没看见tools再搜索结果里找一下点击。 recipes对应左侧扩展操作面板里的BUILD方法 recipes里每一项的内容为依次调用tools里的定义 name 面板中显示的名称 tools 依次调用的项目(tools定义)数组 如 1 2 3 4 5 6 7 8 9 \u0026#34;tools\u0026#34;: [ \u0026#34;xelatex\u0026#34;, \u0026#34;bibtex\u0026#34;, \u0026#34;bibtex-jrnl.aux\u0026#34;, \u0026#34;bibtex-conf.aux\u0026#34;, \u0026#34;bibtex-patent.aux\u0026#34;, \u0026#34;makeindex\u0026#34;, \u0026#34;xelatex\u0026#34;, ] tools name 项目名称 command 命令名称，即一个tools项目是一条命令行，这里填命令名 args 参数数组，命令行中的空格都改成逗号分隔 部分编译组件的用途 xelatex 编译包含中文的正文 bibtex 编译参考文献 makeindex 生成图表索引及目录 后记 装好编译引擎(TexLive)和编辑工具(VSCode)后就可以尝试LaTeX写作了，也许教程学习曲线比较陡峭，但相信各位读者尤其是程序员读者会逐渐感受到这一工具的魅力。 记笔记写博客常用的markdown 可以看作LaTeX的简化版，其中包括嵌入LaTeX数学公式，可见其表达能力是非常强的。 LaTeX有各种各样的宏包，有机会再写博文深入介绍各类宏包资源与使用。\n","date":"2023-11-28T08:06:45Z","image":"https://localfreedom.github.io/img/latex-project-logo.svg","permalink":"https://localfreedom.github.io/p/latex-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/","title":"LaTeX 环境搭建"},{"content":"号码组合含义 目前中国使用的18位身份证号由6位地址码+8位生日+3位顺序码+1位校验码组成。\n地址码指的是公民出生地所在县（市、镇、区）的行政区划代码，如310110是上海市杨浦区。但港澳臺地區居民的身份號碼只精確到省級。\n出生日期码表示公民出生的公历年（4位）、月（2位）、日（2位）。\n顺序码是给同地址码同出生日期码的人编定的顺序号，其中奇数分配给男性，偶数分配给女性。\n最后一位是校验码，这里采用的是ISO 7064:1983, MOD 11-2校验码系统。校验码为一位数，但如果最后采用校验码系统计算的校验码是“10”，碍于身份证号码为18位的规定，则以“X”代替校验码“10”。\n校验码计算方法 将身份证号码从左至右标记为 a1, a2, ⋯, a18，a_{18}即为校验码； 计算权重系数 $W_i = 2^{18 − i} \\mod 11$ i 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 W 7 9 10 5 8 4 2 1 6 3 7 9 10 5 8 4 2 1 计算 $S = \\sum\\limits_{i=1}^{17} a_i * W_i$ $a_{18} = (12 - (S \\mod 11)) \\mod 11$ 1 2 3 4 5 6 7 8 def check_china_id(id_num:str) -\u0026gt; bool: assert len(id_num) == 18 S = 0 for i in range(17): S += int(id_num[i]) * 2 ** (17 - i) % 11 checksum = (12 - (S % 11)) % 11 checkchar = str(checksum) if checksum \u0026lt; 10 else \u0026#39;X\u0026#39; return checkchar == id_num[17] 一些奇怪的用处 首先当然是基本查验接触到的中国身份证号是否正确。\n中国网络实行普遍的实名制，尤其电子游戏需要绑定身份信息，而游戏公司是不能也不应该实时接入公安数据库的，那么就可以按照这一规则生成一个假的身份证通过验证。 金融领域也可以这样申请一些账户，但由于金融行业和公安数据对接更紧密，会定期对比身份信息，随机生成的身份证号很快会露出破绽。\n","date":"2023-11-24T03:22:15Z","permalink":"https://localfreedom.github.io/p/%E4%B8%AD%E5%9B%BD%E8%BA%AB%E4%BB%BD%E8%AF%81%E6%A0%A1%E9%AA%8C/","title":"中国身份证校验"},{"content":"简介 GPT4All是一个本地软件，用于将大语言模型(LargeLanguageModel)通过浮点优化等方法在本地离线提供服务。\n在ChatGPT大火之后，很多厂商模仿推出了开源或专有的大语言对话模型，但这些模型要么以web服务方式提供要么过于需要计算资源而难以本地使用。\n随着facebook的llama的泄漏，一个不错的离线替代品出现，同时llama.cpp项目通过浮点计算优化让笔记本也能勉强运行起大模型来。 GPT4All项目将相关技术和资源整合制作了QT桌面软件，让用户能方便的本地离线运行公开的大语言模型，当然它也提供OpenAI的接口以同时使用线上服务。\n安装 官网会提供Windows、MacOS、Linux的安装包，但每次安装还是会联网检索信息，无法离线安装，只要官网能访问就可以简单的“下一步”安装完成。 也可以从源代码编译。\n下载模型 官方会预配置一些模型可供直接使用，由于网络的封锁这一步可以离线进行。\n模型列表来自官网，下载时会跳转到一个github地址 https://gpt4all.io/models/models.json 可以手动下载后放到 ~/AppData/Roaming/nomic.ai/models.json 之后点击界面左侧的 Download 按钮就可以看到可选模型列表了。\n由于huggingface被彻底封锁，只能手动科学下载。 在官网首页下来可以看到模型介绍，选择想下载的模型，点击下方卡片的箭头按钮就可以下载。 下载后放到~/AppData/Local/nomic.ai/GPT4ALL/里就能被软件自动识别到。\n对话 从上方的菜单选择已经下载好被识别的模型，即可像ChatGPT一样对话。 这些模型通常要求16G的内存即可。 对话效果差强人意，而且基本只支持英文输出。\n","date":"2023-11-21T10:32:17Z","permalink":"https://localfreedom.github.io/p/gpt4all/","title":"GPT4ALL"},{"content":"火狐(Firefox)是著名的浏览器，也是现今最重要最符合自由精神的浏览器。 浏览器通常是用来浏览上网的，但也具备越来越多的离线功能。 这里推荐一些可以完全离线使用的火狐浏览器扩展，以在离线环境中使用火狐。 本文会优先选择Mozilla官方推荐的扩展。\n这篇博文算是首篇非常符合本博客名号的文章了。 建议在Firefox中新建一个Profile体验这些扩展。\nEPUBReader https://addons.mozilla.org/en-US/firefox/addon/epubreader/ 非常不错的EPUB电子书格式阅读器。 不用担心服务商统计自己看了哪些书。 Offline QR code https://addons.mozilla.org/en-US/firefox/addon/offline-qr-code-generator 输入文本生成二维码，简单易用。 离线环境下避免二维码相关信息泄漏。 Emoji https://addons.mozilla.org/en-US/firefox/addon/emoji-sav 提供大量表情。 离线编写带表情的文章时可以通过Emoji快捷查找输入表情符号。 Kiwix https://addons.mozilla.org/en-US/firefox/addon/kiwix-offline Kiwix提供的用以阅读zim文件的插件。 经测试目前不如桌面版kiwix好用，但可以省去安装软件。 Joplin Web Clipper https://addons.mozilla.org/en-US/firefox/addon/joplin-web-clipper Joplin提供的网页剪辑插件，用来将网页转换为适合Joplin的markdown格式笔记。 可以用于将SingleFile或各种方式缓存的离线网页转换成Joplin笔记。 ","date":"2023-11-18T10:41:25Z","permalink":"https://localfreedom.github.io/p/%E7%81%AB%E7%8B%90%E6%B5%8F%E8%A7%88%E5%99%A8%E7%A6%BB%E7%BA%BF%E4%BD%BF%E7%94%A8%E6%89%A9%E5%B1%95%E6%8E%A8%E8%8D%90/","title":"火狐浏览器离线使用扩展推荐"},{"content":"简介 RAR是最知名、使用最为广泛的压缩软件之一。 官网是 https://www.rarlab.com\n获取旧版本 虽然官网只有最新release和beta版本的下载连接，但官方也提供了FTP可以下载以前的版本。\nftp://ftp.rarlab.com/rar\n鉴于当前主流浏览器不再支持ftp可能需要filezilla等软件来获取旧版本安装包。 6.10开始不再支持XP，XPsp3只能使用32位版本。\n比较特殊的是5.91版本，这是5系列最后一版本，同时也是Win7SP1可以直接识别数字签名的版本，非常时候收藏以离线安装使用。 但是当年RAR的数字签名除了问题，ftp上提供的是重新签名后的版本，并不能被Win7SP1识别。 作者在这里放上当年从官网下载的winrar-x64-591.exe的SHA256值1c30d74f20ea721d63061d2a06ac00a9270fc7823004ff4f572d354990d4c1ae。\n激活 RAR是专有收费软件，尽管很多人都没有意识到。 RAR作者也非常良心，只要忍受每次开起的广告就可以一直试用。 购买正版对于很多国家可能并不简单，不过激活还是很容易做到的。 在RAR安装目录C:\\Program Files\\WinRAR下新建rarreg.key，输入纯文本注册信息即可激活。 注册信息就麻烦读者自行检索吧。\n防乱码 使用最广泛的开源的ZIP格式，没有在压缩包中包含字符编码的说明。 对于中文用户，从WinXP或Win7打包的文件可能在MacOS或Linux上文件名目录乱码。 而RAR格式是包含字符编码信息的，便于在其他语言或默认字符编码的系统中正确识别文件名和目录的字符编码。\n","date":"2023-11-15T12:13:15Z","permalink":"https://localfreedom.github.io/p/rar-%E5%A6%99%E7%94%A8/","title":"RAR 妙用"},{"content":"前言 如果想重装系统后离线使用，除了系统安装盘，通常还需要准备驱动。 计算机制造商通常会提供驱动，但这可能不全面或已经过时。 导出当前正常运行状态的驱动，并在重装系统后再次导入，能期望获得最完美的硬件连续使用体验。 就像制造商网站提供的驱动区分系统版本，这一方法在前后系统大版本不一致时很可能出现兼容性问题。\n导出当前驱动 有很多工具软件可以实现这一功能。 既然Windows系统自带了这一功能，从信任链和攻击面的角度当然尽可能使用自带功能。 用管理员权限运行cmd或powershell,执行下列命令即可导出当前系统的驱动。\n1 dism /online /export-driver /destination:E:\\MyDrivers 其中E:\\MyDrivers是你想导出的位置目录。\n导出的文件原位置在C:\\Windows\\System32\\DriverStore\\FileRepository，也可以尝试手动复制。\n[Optional]去掉旧版本驱动 如果驱动在计算机使用过程中更新了，那么所有使用过的驱动版本都会被保留一并导出。 为了节省存储空间，可以考虑删掉旧版本的驱动。\n进入导出驱动的目录，每个驱动会存放在一个名为[驱动名].inf_amd64_[编译号]的文件夹。 驱动名相同，编译号不同的文件夹即是同一驱动的不同版本。\n编译号字典序并不表示先后关系，需要进入文件夹对比[驱动名].inf文件中的日期和版本号。 也可以借助驱动管理软件来快捷分析，如Sanppy Driver Installer Origin。\n博主编写了一个自动化python脚本来抽取所有驱动的最新版本复制到一个新的文件夹，并提示异常如版本号和日期顺序不一致等。\n在新系统中重新安装驱动 有些驱动如果被系统安装过程依赖，要提前并入安装介质，如硬盘驱动！\n安装好新系统后将导出驱动的文件夹拷贝，依次进入每个文件夹[驱动名].inf_amd64_[编译号]，右键[驱动名].inf选择安装即可安装每个驱动，恢复之前的硬件驱动状态。\n也可以在设备管理器中针对每个未知设备搜索驱动，选择从本地存放导出驱动的文件夹搜索即可。 这样可以省略一些不那么关键的驱动，同时很多优化更新类的驱动容易被忽略，因为这类设备不会被标记为未知设备。\n[Optional]备份存储优化 这样导出的驱动是不压缩的，手动压缩可能比例也不高。 其中占用空间较大的通常是显卡驱动，可以考虑显卡驱动采用Intel或Nvidia等厂商的官方安装包，可节省存储空间。 而且显卡驱动的厂商安装包通常支持多个大版本的系统，可以在不同驱动备份中复用。\n","date":"2023-11-14T13:59:02Z","permalink":"https://localfreedom.github.io/p/windows-%E9%A9%B1%E5%8A%A8%E5%A4%87%E4%BB%BD/","title":"Windows 驱动备份"},{"content":"跳过联网 Windows从11版本开始，强化在线功能。 家庭版安装时强制建立在线微软账户，专业版才有Win10那样隐蔽离线帐号功能。 家庭版安装时的强制联网目前可以用bug跳过，进入离线账户的步骤。\n在要求联网的界面，按Shift+F10打开命令行。 执行 taskmgr 开启任务管理器。 在详细信息中结束进程 OOBENetworkConnectionFlow.exe。 22h2进一步限制，专业版也要求联网，上面方法失效。 可以在要求联网的界面按Shift+F10打开命令行，执行oobe\\bypassnro，重启后可跳过。\n虚拟机安装 Win11由于对TPM的要求导致虚拟机安装出现困难，在等待虚拟机软件厂商支持的过程中有一些技巧可以实现虚拟机安装。\nVMware 从16.2版本开始官方加入了TPM支持，可以直接安装。 但是TPM支持需要配置加密比较麻烦可以通过如下方法免配置加密开启TPM支持。 .vmx中加入managedvm.autoAddVTPM=\u0026quot;software\u0026quot;\nVirtualbox 从7.0版本开始Virtualbox继承了TPM组件，可直接安装。\nWin11 硬件限制跳过 此方法在Win11v1测试可用，更新后不可用。 跳过密钥后按Shift+F10打开终端。 输入regedit进入注册表编辑器。 在HKEY_LOCAL_MACHINE\\SYSTEM\\Setup新建项LabConfig。 在LabConfig中新建三个DWORD(32-bit)值。 BypassTPMCheck = 1 BypassRAMCheck = 1 BypassSecureBootCheck = 1 退回到安装界面即可继续。 移动硬盘插上没反应 Win11似乎有不自动分配盘符的bug,需要在设备管理器-磁盘管理中手动分配盘符。\n随机Mac地址 可以在连上的Wifi中设置随机mac地址每日更换。 该功能需要网卡驱动配合支持。\n","date":"2023-11-12T13:59:06Z","permalink":"https://localfreedom.github.io/p/windows-11-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/","title":"Windows 11 使用技巧"},{"content":"Hello World 一直想分享自己在信息技术和隐私方面折腾的经验。 隐私向的创作分享，当然应当有比较可靠而持久的匿名方式。\n终于发现github上的静态博客是一个比较均衡的方式， 支持匿名，平台稳定，无费用，用户多，聚集了目标读者。\n经历了一系列大大小小的变故，不知道意外和明天哪一个先到来，终于在双十一开启了博客。 希望这个博客能让读者有所收获。\n写作目的 传播数字权利意识，普及隐私保护技术，塑造匿名生活方式。\n内容规划 初步考虑以技术笔记分享为主:\n折腾各种自由软件和开源软件的一些技巧 数字工具栈的参考配置流程 匿名化生活的方式方法 收集的一些有趣的资源 发展趋势、管理、社区建设、八卦等 ","date":"2023-11-11T12:33:08Z","permalink":"https://localfreedom.github.io/p/hello-world/","title":"Hello World"}]